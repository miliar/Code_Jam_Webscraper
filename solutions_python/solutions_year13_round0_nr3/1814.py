import sys

POWS = [1, 2, 3, 11, 22, 101, 111, 121, 202, 212, 1001, 1111, 2002, 10001, 10101, 10201, 11011, 11111, 11211, 20002, 20102, 100001, 101101, 110011, 111111, 200002, 1000001, 1001001, 1002001, 1010101, 1011101, 1012101, 1100011, 1101011, 1102011, 1110111, 1111111, 2000002, 2001002, 10000001, 10011001, 10100101, 10111101, 11000011, 11011011, 11100111, 11111111, 20000002]
NUMS = [1, 4, 9, 121, 484, 10201, 12321, 14641, 40804, 44944, 1002001, 1234321, 4008004, 100020001, 102030201, 104060401, 121242121, 123454321, 125686521, 400080004, 404090404, 10000200001, 10221412201, 12102420121, 12345654321, 40000800004, 1000002000001, 1002003002001, 1004006004001, 1020304030201, 1022325232201, 1024348434201, 1210024200121, 1212225222121, 1214428244121, 1232346432321, 1234567654321, 4000008000004, 4004009004004, 100000020000001, 100220141022001, 102012040210201, 102234363432201, 121000242000121, 121242363242121, 123212464212321, 123456787654321, 400000080000004]

def main():
	testCases = int(raw_input())
	testCount = 1
	while (testCount <= testCases):
		line = raw_input().split(" ")
		start = int(line[0])
		end = int(line[1])

		result = handleTest(start, end)

		print "Case #%d: %d" % (testCount, result)

		testCount += 1

	return 0

def handleTest(start, end):
	count = 0

	for i in xrange(len(NUMS)):
		if (NUMS[i] >= start) and (NUMS[i] <= end) and isPalindrome(str(POWS[i])):
			count += 1

	return count

def isPalindrome(num):
	length = len(num)
	for i in xrange(length / 2):
		if num[i] != num[length - 1 - i]:
			return False

	return True

if __name__ == "__main__":
	sys.exit(main())
