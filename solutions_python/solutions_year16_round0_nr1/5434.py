{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['0', '1', '2', '11', '75', '146', '124', '46', '55', '167', '25', '119', '34', '15', '18', '53', '87', '71', '173', '121', '59', '191', '108', '194', '5', '154', '166', '10', '151', '58', '114', '182', '130', '195', '26', '39', '125', '136', '8', '180', '147', '44', '200', '63', '118', '199', '153', '40', '104', '107', '74', '171', '19', '187', '149', '155', '54', '3', '4', '49', '177', '134', '93', '51', '144', '196', '132', '9', '20', '175', '36', '197', '126', '84', '133', '94', '7', '135', '30', '73', '141', '14', '69', '47', '185', '198', '190', '172', '13', '102', '100', '6', '111', '137', '45', '179', '92', '24', '65', '186']\n"
     ]
    }
   ],
   "source": [
    "inputs = []\n",
    "num_test_cases = 0\n",
    "with open(\"A-large.in\", \"r\") as inp:\n",
    "    num_test_cases = int(inp.readline())\n",
    "    for line in inp:\n",
    "        inputs.append(line.rstrip('\\n').rstrip('\\r'))\n",
    "print inputs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CASE #1: INSOMNIA\n",
      "\n",
      "CASE #2: 10\n",
      "\n",
      "CASE #3: 90\n",
      "\n",
      "CASE #4: 110\n",
      "\n",
      "CASE #5: 900\n",
      "\n",
      "CASE #6: 730\n",
      "\n",
      "CASE #7: 2356\n",
      "\n",
      "CASE #8: 506\n",
      "\n",
      "CASE #9: 495\n",
      "\n",
      "CASE #10: 1169\n",
      "\n",
      "CASE #11: 900\n",
      "\n",
      "CASE #12: 1071\n",
      "\n",
      "CASE #13: 918\n",
      "\n",
      "CASE #14: 180\n",
      "\n",
      "CASE #15: 90\n",
      "\n",
      "CASE #16: 424\n",
      "\n",
      "CASE #17: 609\n",
      "\n",
      "CASE #18: 710\n",
      "\n",
      "CASE #19: 1038\n",
      "\n",
      "CASE #20: 968\n",
      "\n",
      "CASE #21: 590\n",
      "\n",
      "CASE #22: 1910\n",
      "\n",
      "CASE #23: 972\n",
      "\n",
      "CASE #24: 970\n",
      "\n",
      "CASE #25: 90\n",
      "\n",
      "CASE #26: 924\n",
      "\n",
      "CASE #27: 5478\n",
      "\n",
      "CASE #28: 90\n",
      "\n",
      "CASE #29: 1208\n",
      "\n",
      "CASE #30: 290\n",
      "\n",
      "CASE #31: 798\n",
      "\n",
      "CASE #32: 910\n",
      "\n",
      "CASE #33: 1040\n",
      "\n",
      "CASE #34: 2145\n",
      "\n",
      "CASE #35: 390\n",
      "\n",
      "CASE #36: 390\n",
      "\n",
      "CASE #37: 9000\n",
      "\n",
      "CASE #38: 952\n",
      "\n",
      "CASE #39: 96\n",
      "\n",
      "CASE #40: 900\n",
      "\n",
      "CASE #41: 1176\n",
      "\n",
      "CASE #42: 396\n",
      "\n",
      "CASE #43: 9000\n",
      "\n",
      "CASE #44: 504\n",
      "\n",
      "CASE #45: 590\n",
      "\n",
      "CASE #46: 1990\n",
      "\n",
      "CASE #47: 918\n",
      "\n",
      "CASE #48: 920\n",
      "\n",
      "CASE #49: 936\n",
      "\n",
      "CASE #50: 749\n",
      "\n",
      "CASE #51: 518\n",
      "\n",
      "CASE #52: 1197\n",
      "\n",
      "CASE #53: 190\n",
      "\n",
      "CASE #54: 1309\n",
      "\n",
      "CASE #55: 1043\n",
      "\n",
      "CASE #56: 1085\n",
      "\n",
      "CASE #57: 594\n",
      "\n",
      "CASE #58: 30\n",
      "\n",
      "CASE #59: 92\n",
      "\n",
      "CASE #60: 490\n",
      "\n",
      "CASE #61: 1239\n",
      "\n",
      "CASE #62: 938\n",
      "\n",
      "CASE #63: 930\n",
      "\n",
      "CASE #64: 459\n",
      "\n",
      "CASE #65: 1296\n",
      "\n",
      "CASE #66: 980\n",
      "\n",
      "CASE #67: 792\n",
      "\n",
      "CASE #68: 90\n",
      "\n",
      "CASE #69: 900\n",
      "\n",
      "CASE #70: 2625\n",
      "\n",
      "CASE #71: 396\n",
      "\n",
      "CASE #72: 1970\n",
      "\n",
      "CASE #73: 1890\n",
      "\n",
      "CASE #74: 924\n",
      "\n",
      "CASE #75: 1064\n",
      "\n",
      "CASE #76: 564\n",
      "\n",
      "CASE #77: 70\n",
      "\n",
      "CASE #78: 945\n",
      "\n",
      "CASE #79: 270\n",
      "\n",
      "CASE #80: 730\n",
      "\n",
      "CASE #81: 987\n",
      "\n",
      "CASE #82: 238\n",
      "\n",
      "CASE #83: 345\n",
      "\n",
      "CASE #84: 470\n",
      "\n",
      "CASE #85: 1665\n",
      "\n",
      "CASE #86: 990\n",
      "\n",
      "CASE #87: 1520\n",
      "\n",
      "CASE #88: 1892\n",
      "\n",
      "CASE #89: 104\n",
      "\n",
      "CASE #90: 918\n",
      "\n",
      "CASE #91: 900\n",
      "\n",
      "CASE #92: 90\n",
      "\n",
      "CASE #93: 1110\n",
      "\n",
      "CASE #94: 1096\n",
      "\n",
      "CASE #95: 360\n",
      "\n",
      "CASE #96: 1253\n",
      "\n",
      "CASE #97: 552\n",
      "\n",
      "CASE #98: 456\n",
      "\n",
      "CASE #99: 715\n",
      "\n",
      "CASE #100: 930\n",
      "\n"
     ]
    }
   ],
   "source": [
    "with open('A-large.out',\"w\") as out:\n",
    "    for i in range(0,num_test_cases):\n",
    "        N = int(inputs[i])\n",
    "        digits_seen = set()\n",
    "        output = 0\n",
    "        if N == 0:\n",
    "            output = 'INSOMNIA'\n",
    "        else:\n",
    "            j = 1\n",
    "            Nj = N\n",
    "            while(len(digits_seen) != 10):\n",
    "                Nj = j*N\n",
    "                digits_seen.update(str(Nj))\n",
    "                j = j + 1\n",
    "            output = Nj\n",
    "        ol = \"CASE #{}: {}\\n\".format(i+1,output)\n",
    "        print(ol)\n",
    "        out.write(ol)\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "set(['3', '2'])\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "inp."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
