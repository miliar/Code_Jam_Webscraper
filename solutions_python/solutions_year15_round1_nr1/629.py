{
 "metadata": {
  "name": "",
  "signature": "sha256:302a3e330bd3c1008c438700cc6bbe9856957a6adaa4a7ebca930740cd500f8b"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "task = \"T1\"\n",
      "f = open('input'+task+'.txt', 'r')\n",
      "n_tests = int(f.readline())\n",
      "def case():\n",
      "    global f\n",
      "    # read Smax\n",
      "    line = (f.readline()).split()\n",
      "    X = int(line[0])\n",
      "    # Mashrooms\n",
      "    line = (f.readline()).split()\n",
      "    \n",
      "    sum1 = 0\n",
      "    maxDiff = 0\n",
      "    for i in range(X-1):\n",
      "        diff = int(line[i]) - int(line[i+1])\n",
      "        sum1 += diff if diff > 0 else 0\n",
      "        if diff > maxDiff:\n",
      "            maxDiff = diff\n",
      "        \n",
      "    sum2 = 0\n",
      "    for i in range(X-1):\n",
      "        sum2 += min(int(line[i]), maxDiff)\n",
      "    return sum1, sum2\n",
      "    "
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 18
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "result = []\n",
      "for i in range(n_tests):\n",
      "    res1, res2 = case()\n",
      "    result.append(\"Case #\"+str(i+1)+\": \"+str(res1)+\" \"+str(res2))\n",
      "f.close()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "result"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 20,
       "text": [
        "['Case #1: 15 25',\n",
        " 'Case #2: 0 0',\n",
        " 'Case #3: 81 567',\n",
        " 'Case #4: 181 244',\n",
        " 'Case #5: 0 0',\n",
        " 'Case #6: 500 500',\n",
        " 'Case #7: 100 900',\n",
        " 'Case #8: 106 237',\n",
        " 'Case #9: 82 284',\n",
        " 'Case #10: 87 285',\n",
        " 'Case #11: 107 354',\n",
        " 'Case #12: 135 341',\n",
        " 'Case #13: 222 380',\n",
        " 'Case #14: 131 229',\n",
        " 'Case #15: 144 384',\n",
        " 'Case #16: 258 421',\n",
        " 'Case #17: 187 380',\n",
        " 'Case #18: 81 372',\n",
        " 'Case #19: 164 467',\n",
        " 'Case #20: 146 345',\n",
        " 'Case #21: 180 329',\n",
        " 'Case #22: 188 379',\n",
        " 'Case #23: 73 354',\n",
        " 'Case #24: 165 286',\n",
        " 'Case #25: 181 296',\n",
        " 'Case #26: 106 359',\n",
        " 'Case #27: 94 306',\n",
        " 'Case #28: 226 423',\n",
        " 'Case #29: 138 329',\n",
        " 'Case #30: 126 465',\n",
        " 'Case #31: 253 416',\n",
        " 'Case #32: 122 305',\n",
        " 'Case #33: 56 216',\n",
        " 'Case #34: 108 337',\n",
        " 'Case #35: 121 295',\n",
        " 'Case #36: 124 337',\n",
        " 'Case #37: 201 478',\n",
        " 'Case #38: 194 473',\n",
        " 'Case #39: 102 406',\n",
        " 'Case #40: 194 364',\n",
        " 'Case #41: 258 375',\n",
        " 'Case #42: 154 510',\n",
        " 'Case #43: 100 308',\n",
        " 'Case #44: 121 430',\n",
        " 'Case #45: 144 405',\n",
        " 'Case #46: 172 310',\n",
        " 'Case #47: 112 346',\n",
        " 'Case #48: 155 368',\n",
        " 'Case #49: 149 371',\n",
        " 'Case #50: 104 299',\n",
        " 'Case #51: 124 308',\n",
        " 'Case #52: 124 348',\n",
        " 'Case #53: 163 302',\n",
        " 'Case #54: 216 396',\n",
        " 'Case #55: 104 543',\n",
        " 'Case #56: 229 324',\n",
        " 'Case #57: 142 402',\n",
        " 'Case #58: 123 378',\n",
        " 'Case #59: 98 310',\n",
        " 'Case #60: 158 297',\n",
        " 'Case #61: 96 202',\n",
        " 'Case #62: 126 286',\n",
        " 'Case #63: 153 453',\n",
        " 'Case #64: 68 207',\n",
        " 'Case #65: 126 339',\n",
        " 'Case #66: 160 377',\n",
        " 'Case #67: 108 390',\n",
        " 'Case #68: 91 327',\n",
        " 'Case #69: 137 420',\n",
        " 'Case #70: 128 291',\n",
        " 'Case #71: 209 355',\n",
        " 'Case #72: 76 287',\n",
        " 'Case #73: 118 347',\n",
        " 'Case #74: 177 298',\n",
        " 'Case #75: 91 421',\n",
        " 'Case #76: 155 289',\n",
        " 'Case #77: 212 370',\n",
        " 'Case #78: 110 230',\n",
        " 'Case #79: 192 542',\n",
        " 'Case #80: 149 367',\n",
        " 'Case #81: 232 525',\n",
        " 'Case #82: 111 349',\n",
        " 'Case #83: 192 347',\n",
        " 'Case #84: 291 455',\n",
        " 'Case #85: 197 463',\n",
        " 'Case #86: 178 329',\n",
        " 'Case #87: 190 505',\n",
        " 'Case #88: 166 503',\n",
        " 'Case #89: 102 282',\n",
        " 'Case #90: 121 198',\n",
        " 'Case #91: 188 427',\n",
        " 'Case #92: 181 508',\n",
        " 'Case #93: 168 305',\n",
        " 'Case #94: 99 383',\n",
        " 'Case #95: 246 472',\n",
        " 'Case #96: 110 330',\n",
        " 'Case #97: 101 298',\n",
        " 'Case #98: 94 324',\n",
        " 'Case #99: 143 334',\n",
        " 'Case #100: 162 343']"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# write to file\n",
      "fout = open('output'+task+'.txt', 'w')\n",
      "for line in result:\n",
      "    print(line)\n",
      "    fout.write(line+'\\n')\n",
      "fout.close()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Case #1: 15 25\n",
        "Case #2: 0 0\n",
        "Case #3: 81 567\n",
        "Case #4: 181 244\n",
        "Case #5: 0 0\n",
        "Case #6: 500 500\n",
        "Case #7: 100 900\n",
        "Case #8: 106 237\n",
        "Case #9: 82 284\n",
        "Case #10: 87 285\n",
        "Case #11: 107 354\n",
        "Case #12: 135 341\n",
        "Case #13: 222 380\n",
        "Case #14: 131 229\n",
        "Case #15: 144 384\n",
        "Case #16: 258 421\n",
        "Case #17: 187 380\n",
        "Case #18: 81 372\n",
        "Case #19: 164 467\n",
        "Case #20: 146 345\n",
        "Case #21: 180 329\n",
        "Case #22: 188 379\n",
        "Case #23: 73 354\n",
        "Case #24: 165 286\n",
        "Case #25: 181 296\n",
        "Case #26: 106 359\n",
        "Case #27: 94 306\n",
        "Case #28: 226 423\n",
        "Case #29: 138 329\n",
        "Case #30: 126 465\n",
        "Case #31: 253 416\n",
        "Case #32: 122 305\n",
        "Case #33: 56 216\n",
        "Case #34: 108 337\n",
        "Case #35: 121 295\n",
        "Case #36: 124 337\n",
        "Case #37: 201 478\n",
        "Case #38: 194 473\n",
        "Case #39: 102 406\n",
        "Case #40: 194 364\n",
        "Case #41: 258 375\n",
        "Case #42: 154 510\n",
        "Case #43: 100 308\n",
        "Case #44: 121 430\n",
        "Case #45: 144 405\n",
        "Case #46: 172 310\n",
        "Case #47: 112 346\n",
        "Case #48: 155 368\n",
        "Case #49: 149 371\n",
        "Case #50: 104 299\n",
        "Case #51: 124 308\n",
        "Case #52: 124 348\n",
        "Case #53: 163 302\n",
        "Case #54: 216 396\n",
        "Case #55: 104 543\n",
        "Case #56: 229 324\n",
        "Case #57: 142 402\n",
        "Case #58: 123 378\n",
        "Case #59: 98 310\n",
        "Case #60: 158 297\n",
        "Case #61: 96 202\n",
        "Case #62: 126 286\n",
        "Case #63: 153 453\n",
        "Case #64: 68 207\n",
        "Case #65: 126 339\n",
        "Case #66: 160 377\n",
        "Case #67: 108 390\n",
        "Case #68: 91 327\n",
        "Case #69: 137 420\n",
        "Case #70: 128 291\n",
        "Case #71: 209 355\n",
        "Case #72: 76 287\n",
        "Case #73: 118 347\n",
        "Case #74: 177 298\n",
        "Case #75: 91 421\n",
        "Case #76: 155 289\n",
        "Case #77: 212 370\n",
        "Case #78: 110 230\n",
        "Case #79: 192 542\n",
        "Case #80: 149 367\n",
        "Case #81: 232 525\n",
        "Case #82: 111 349\n",
        "Case #83: 192 347\n",
        "Case #84: 291 455\n",
        "Case #85: 197 463\n",
        "Case #86: 178 329\n",
        "Case #87: 190 505\n",
        "Case #88: 166 503\n",
        "Case #89: 102 282\n",
        "Case #90: 121 198\n",
        "Case #91: 188 427\n",
        "Case #92: 181 508\n",
        "Case #93: 168 305\n",
        "Case #94: 99 383\n",
        "Case #95: 246 472\n",
        "Case #96: 110 330\n",
        "Case #97: 101 298\n",
        "Case #98: 94 324\n",
        "Case #99: 143 334\n",
        "Case #100: 162 343\n"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}