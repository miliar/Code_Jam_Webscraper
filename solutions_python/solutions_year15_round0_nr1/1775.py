{
 "metadata": {
  "name": "",
  "signature": "sha256:a0bf33dd32aad60df8e0a890966e00ecaabaa5575c44dc827109b9c6929c618b"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import copy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 37
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "f = open('input1.txt', 'r')\n",
      "n_tests = int(f.readline())\n",
      "def case():\n",
      "    global f\n",
      "    # read Smax\n",
      "    line = (f.readline()).split()\n",
      "    Smax = int(line[0])\n",
      "    digits = line[1]\n",
      "    \n",
      "    suma = 0   # sum of all people\n",
      "    needed = 0  # needed people\n",
      "    \n",
      "    for shyness in range(len(digits)):\n",
      "        n_people = int(digits[shyness])\n",
      "        needed = max(needed, shyness - suma)\n",
      "        suma += n_people\n",
      "    return needed"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 101
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "result = []\n",
      "for i in range(n_tests):\n",
      "    res = case()\n",
      "    result.append(\"Case #\"+str(i+1)+\": \"+str(res))\n",
      "f.close()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 102
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "result"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 103,
       "text": [
        "['Case #1: 0',\n",
        " 'Case #2: 0',\n",
        " 'Case #3: 0',\n",
        " 'Case #4: 3',\n",
        " 'Case #5: 5',\n",
        " 'Case #6: 0',\n",
        " 'Case #7: 0',\n",
        " 'Case #8: 2',\n",
        " 'Case #9: 0',\n",
        " 'Case #10: 0',\n",
        " 'Case #11: 0',\n",
        " 'Case #12: 6',\n",
        " 'Case #13: 0',\n",
        " 'Case #14: 2',\n",
        " 'Case #15: 0',\n",
        " 'Case #16: 0',\n",
        " 'Case #17: 0',\n",
        " 'Case #18: 0',\n",
        " 'Case #19: 0',\n",
        " 'Case #20: 0',\n",
        " 'Case #21: 4',\n",
        " 'Case #22: 1',\n",
        " 'Case #23: 5',\n",
        " 'Case #24: 4',\n",
        " 'Case #25: 2',\n",
        " 'Case #26: 0',\n",
        " 'Case #27: 0',\n",
        " 'Case #28: 0',\n",
        " 'Case #29: 0',\n",
        " 'Case #30: 5',\n",
        " 'Case #31: 0',\n",
        " 'Case #32: 0',\n",
        " 'Case #33: 3',\n",
        " 'Case #34: 0',\n",
        " 'Case #35: 2',\n",
        " 'Case #36: 0',\n",
        " 'Case #37: 0',\n",
        " 'Case #38: 0',\n",
        " 'Case #39: 1',\n",
        " 'Case #40: 0',\n",
        " 'Case #41: 0',\n",
        " 'Case #42: 5',\n",
        " 'Case #43: 4',\n",
        " 'Case #44: 0',\n",
        " 'Case #45: 2',\n",
        " 'Case #46: 0',\n",
        " 'Case #47: 0',\n",
        " 'Case #48: 0',\n",
        " 'Case #49: 2',\n",
        " 'Case #50: 0',\n",
        " 'Case #51: 2',\n",
        " 'Case #52: 0',\n",
        " 'Case #53: 0',\n",
        " 'Case #54: 0',\n",
        " 'Case #55: 0',\n",
        " 'Case #56: 0',\n",
        " 'Case #57: 1',\n",
        " 'Case #58: 0',\n",
        " 'Case #59: 6',\n",
        " 'Case #60: 0',\n",
        " 'Case #61: 0',\n",
        " 'Case #62: 2',\n",
        " 'Case #63: 2',\n",
        " 'Case #64: 0',\n",
        " 'Case #65: 3',\n",
        " 'Case #66: 3',\n",
        " 'Case #67: 1',\n",
        " 'Case #68: 6',\n",
        " 'Case #69: 2',\n",
        " 'Case #70: 0',\n",
        " 'Case #71: 0',\n",
        " 'Case #72: 6',\n",
        " 'Case #73: 0',\n",
        " 'Case #74: 0',\n",
        " 'Case #75: 6',\n",
        " 'Case #76: 0',\n",
        " 'Case #77: 3',\n",
        " 'Case #78: 0',\n",
        " 'Case #79: 0',\n",
        " 'Case #80: 1',\n",
        " 'Case #81: 0',\n",
        " 'Case #82: 3',\n",
        " 'Case #83: 3',\n",
        " 'Case #84: 4',\n",
        " 'Case #85: 1',\n",
        " 'Case #86: 1',\n",
        " 'Case #87: 6',\n",
        " 'Case #88: 0',\n",
        " 'Case #89: 0',\n",
        " 'Case #90: 2',\n",
        " 'Case #91: 0',\n",
        " 'Case #92: 5',\n",
        " 'Case #93: 4',\n",
        " 'Case #94: 0',\n",
        " 'Case #95: 0',\n",
        " 'Case #96: 0',\n",
        " 'Case #97: 0',\n",
        " 'Case #98: 0',\n",
        " 'Case #99: 2',\n",
        " 'Case #100: 5']"
       ]
      }
     ],
     "prompt_number": 103
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# write to file\n",
      "fout = open('output1.txt', 'w')\n",
      "for line in result:\n",
      "    print(line)\n",
      "    fout.write(line+'\\n')\n",
      "fout.close()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Case #0: 0\n",
        "Case #1: 0\n",
        "Case #2: 0\n",
        "Case #3: 3\n",
        "Case #4: 5\n",
        "Case #5: 0\n",
        "Case #6: 0\n",
        "Case #7: 2\n",
        "Case #8: 0\n",
        "Case #9: 0\n",
        "Case #10: 0\n",
        "Case #11: 6\n",
        "Case #12: 0\n",
        "Case #13: 2\n",
        "Case #14: 0\n",
        "Case #15: 0\n",
        "Case #16: 0\n",
        "Case #17: 0\n",
        "Case #18: 0\n",
        "Case #19: 0\n",
        "Case #20: 4\n",
        "Case #21: 1\n",
        "Case #22: 5\n",
        "Case #23: 4\n",
        "Case #24: 2\n",
        "Case #25: 0\n",
        "Case #26: 0\n",
        "Case #27: 0\n",
        "Case #28: 0\n",
        "Case #29: 5\n",
        "Case #30: 0\n",
        "Case #31: 0\n",
        "Case #32: 3\n",
        "Case #33: 0\n",
        "Case #34: 2\n",
        "Case #35: 0\n",
        "Case #36: 0\n",
        "Case #37: 0\n",
        "Case #38: 1\n",
        "Case #39: 0\n",
        "Case #40: 0\n",
        "Case #41: 5\n",
        "Case #42: 4\n",
        "Case #43: 0\n",
        "Case #44: 2\n",
        "Case #45: 0\n",
        "Case #46: 0\n",
        "Case #47: 0\n",
        "Case #48: 2\n",
        "Case #49: 0\n",
        "Case #50: 2\n",
        "Case #51: 0\n",
        "Case #52: 0\n",
        "Case #53: 0\n",
        "Case #54: 0\n",
        "Case #55: 0\n",
        "Case #56: 1\n",
        "Case #57: 0\n",
        "Case #58: 6\n",
        "Case #59: 0\n",
        "Case #60: 0\n",
        "Case #61: 2\n",
        "Case #62: 2\n",
        "Case #63: 0\n",
        "Case #64: 3\n",
        "Case #65: 3\n",
        "Case #66: 1\n",
        "Case #67: 6\n",
        "Case #68: 2\n",
        "Case #69: 0\n",
        "Case #70: 0\n",
        "Case #71: 6\n",
        "Case #72: 0\n",
        "Case #73: 0\n",
        "Case #74: 6\n",
        "Case #75: 0\n",
        "Case #76: 3\n",
        "Case #77: 0\n",
        "Case #78: 0\n",
        "Case #79: 1\n",
        "Case #80: 0\n",
        "Case #81: 3\n",
        "Case #82: 3\n",
        "Case #83: 4\n",
        "Case #84: 1\n",
        "Case #85: 1\n",
        "Case #86: 6\n",
        "Case #87: 0\n",
        "Case #88: 0\n",
        "Case #89: 2\n",
        "Case #90: 0\n",
        "Case #91: 5\n",
        "Case #92: 4\n",
        "Case #93: 0\n",
        "Case #94: 0\n",
        "Case #95: 0\n",
        "Case #96: 0\n",
        "Case #97: 0\n",
        "Case #98: 2\n",
        "Case #99: 5\n"
       ]
      }
     ],
     "prompt_number": 99
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}