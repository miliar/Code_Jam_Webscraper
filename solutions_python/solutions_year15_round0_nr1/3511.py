def optimal_invites(roster):
    standing = 0
    result = 0
    for x,i in enumerate(roster):
        #print x, i, standing,result
        if int(i):
            if standing >= x:
                standing += int(i)
            else:
                result += x-standing
                standing += int(i) + (x-standing)

    return result
def parser(raw):
    cases = []
    for line in raw.split('\n')[1:]:
        cases.append(line[2:])
    for x, case in enumerate(cases):
        print "Case #{0}: {1}".format(x+1,optimal_invites(case))

a = """100
6 1000201
6 2010102
2 022
6 4588488
1 41
6 0005005
6 2011122
3 1221
6 2200122
6 5900701
6 1000481
1 48
0 1
0 1
6 3726027
0 3
6 9999999
6 8000031
6 0000001
6 0000001
1 01
4 22212
6 0100901
1 11
5 110011
5 222002
4 11111
6 3090001
3 0208
6 0007001
3 2022
6 7705001
6 0000451
0 3
6 4383591
3 3001
6 0000321
5 000001
2 501
6 7934592
0 1
6 8040003
6 4000801
6 0000039
6 2110221
6 1111111
6 0090001
6 0002001
6 7000001
3 0001
2 107
2 701
6 9060001
6 0000001
2 272
3 0101
6 0010011
0 6
6 0006001
6 0102011
6 0704119
6 8000001
2 501
6 0000005
1 17
6 2800707
3 0101
3 8001
6 7189441
1 41
2 601
2 911
6 5005004
6 0200001
6 2834837
6 7583902
6 1222021
5 770501
6 3007001
6 3289751
6 0010001
0 1
6 7003631
2 061
1 09
3 9001
6 1111111
2 001
4 11211
6 0500001
6 6266606
6 1002001
2 001
6 0233021
6 6000581
5 592482
3 6011
6 1221221
6 8001001
1 71"""


#sum(int(i) for i in roster)

