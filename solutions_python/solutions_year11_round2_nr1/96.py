#!/usr/bin/env pythonimport sysdef solve_one(inpu):  n = len(inpu)  wins = [0] * n  played = [0] * n  for i in xrange(n):    wins[i] = range(n)    played[i] = range(n)    for j in xrange(n):      wins[i][j] = inpu[i][j] == '1'      played[i][j] = inpu[i][j] != '.'  games = [0] * n  win_count = [0] * n  for i in xrange(n):    games[i] = win_count[i] = 0    for j in xrange(n):      if played[i][j]:        games[i] += 1      if wins[i][j]:        win_count[i] += 1  owp = [0]*n  for i in xrange(n):    owp[i] = 0    for j in xrange(n):      if played[j][i] and wins[j][i]:        owp[i] += 1.0*(win_count[j]-1) / (games[j]-1)      elif played[j][i]:        owp[i] += 1.0*(win_count[j]-0) / (games[j]-1)    owp[i] = owp[i]/games[i]  res = [0]*n  for i in xrange(n):    wp = 1.0*win_count[i] / games[i]    oowp = 0    for j in xrange(n):      if played[j][i]:        oowp += owp[j]    oowp = 1.0*oowp/games[i]    res[i] = str(0.25 * wp + 0.50 * owp[i] + 0.25 * oowp)    return '\n'+'\n'.join(res)  def solve(inp):  ret = []  T = int(inp[0])  inp = inp[1:]  for i in xrange(T):    N = int(inp[0])    ret.append('Case #%d: %s' % (i+1,solve_one(inp[1:N+1])))    inp = inp[N+1:]  return '\n'.join(ret)def main():  open('.'.join([sys.argv[1].split('.')[0],'out']),'w').write(solve(open(sys.argv[1],'r').readlines()))if __name__ == '__main__':  main()