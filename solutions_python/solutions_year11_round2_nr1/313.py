def readint(): return int(raw_input())def readfloat(): return float(raw_input())def readarray(N, foo):	res = []	for i in xrange(N):		res.append(foo())	return resdef readlinearray(foo): return map(foo, raw_input().split())import operatorT = readint()for i in xrange(T):	res = 0	N = readint()	OP = []	WP = []	OWP = []	OOWP = []	gl = []	wn = []	ln = []	for j in xrange(N):		d = {}		g = raw_input()		w = 0		l = 0		wpj = 0		for k in xrange(N):			if g[k] != '.':				d[k] = True				if g[k] == '1':					w += 1				else :					l += 1			else : d[k] = False		if (w + l) != 0: wpj = w*1./(w + l)		WP.append(wpj)		OP.append(d)		gl.append(g)		wn.append(w)		ln.append(l)	for k in xrange(N):		nop = 0		owps = 0		owpk = 0		for p in xrange(N):			wpp = 0			if gl[k][p] == '1': 				wpp = wn[p]*1./(wn[p]+ln[p]-1)				nop += 1				owps += wpp			elif gl[k][p] == '0': 				wpp = (wn[p]-1)*1./(wn[p]+ln[p]-1)				nop += 1				owps += wpp		if (nop) != 0: owpk = owps*1./nop		OWP.append(owpk)	for k in xrange(N):		noop = 0		oowps = 0		oowpk = 0		for p in xrange(N):			if gl[k][p] != '.':				noop += 1				oowps += OWP[p]		if (noop) != 0: oowpk = oowps*1./noop		OOWP.append(oowpk)	print "Case #%d:" % (i + 1)	RPI = []	for k in xrange(N):		r = 0.25*WP[k] + 0.5*OWP[k] + 0.25*OOWP[k]		print r		