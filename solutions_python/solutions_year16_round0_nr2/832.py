import sys

# --+ -> +++
# -++ -> +++
# +-+ -> -++ -> +++
# --- -> +++
# -+- -> +-+ -> -++ -> +++
# +-- -> --- -> +++
# ++- -> --- -> +++

# ---- -> ++++
# ---+ -> ++++
# --+- -> +-++ -> -+++ -> ++++
#      -> +++- -> ---- -> ++++
# -+-- -> ++-+ -> ---+ -> ++++
# -++- -> +--+ -> ---+ -> ++++
# +--- -> ---- -> ++++
# +-+- -> -+-- -> ++-+ -> ---+ -> ++++
#      -> -++- -> +--+ -> ---+ -> ++++
#      -> -++- -> +++- -> ---- -> ++++
# ++-- -> ---- -> ++++

# goal: -, +++ -> ---
# goal: +, +++--- -> (+++ -> ---)--- -> ++++++ 
# goal: -, +++---+ -> ((+++ -> ---)--- -> ++++++)+ -> -------
# goal: +, +++---+- -> (((+++ -> ---)--- -> ++++++)+ -> -------)- -> ++++++++
# goal: -, +++---+-++ -> ((((+++ -> ---)--- -> ++++++)+ -> -------)- -> ++++++++)++ -> ----------
# goal: +, +++---+-++--- -> (((((+++ -> ---)--- -> ++++++)+ -> -------)- -> ++++++++)++ -> ----------)--- -> +++++++++++++
# +++---+-++---+ -> ((((((+++ -> ---)--- -> ++++++)+ -> -------)- -> ++++++++)++ -> ----------)--- -> +++++++++++++)+
# +++---+-++---+ -> ------+-++---+ -> +++++++-++---+ -> --------++---+ -> ++++++++++---+ -> -------------+ -> ++++++++++++++

base = {
    # (stack, goal)
    ('+', '+'): 0,
    ('+', '-'): 1,
    ('-', '+'): 1,
    ('-', '-'): 0,
}


def invert(goal):
    if goal == '+':
        return '-'
    else:
        return '+'


def flips(stack, goal):
    if (stack, goal) in base:
        return base[(stack, goal)]
    bottom = stack[-1]
    for i in range(len(stack)-1, -1, -1):
        if stack[i] != bottom:
            if bottom == goal:
                return flips(stack[:i+1], goal)
            else:
                return flips(stack[:i+1], invert(goal)) + 1

    if bottom == goal:
        return 0
    else:
        return 1


total = int(sys.stdin.readline().strip())
for case in range(1, total + 1):
    stack = sys.stdin.readline().strip()
    print("Case #{}: {}".format(case, flips(stack, '+')))
