
# coding: utf-8

# In[7]:

import numpy as np


# In[45]:

def flip(x, index, K):
    x[index:index+K] = 1-x[index:index+K];
    
def greedy(s, K):
    count = 0;
    N = len(s);
    for i in range(0, N-K+1):
        if s[i] == 0:
            flip(s, i, K);
            count+=1;
    if sum(s) == len(s):
        return(count);
    else:
        return("IMPOSSIBLE")


# In[48]:

def binarize(input_string):
    return np.array([1 if z == '+' else 0 for z in list(input_string)])


# In[63]:

def solve(prob_string):
    return greedy(binarize(prob_string.split()[0]), int(prob_string.split()[1]))


# In[64]:

inputs = """---+-++- 3
+++++ 4
-+-+- 4
---- 2
+-+++-+-- 3
+--- 2
+-+- 3
---------- 2
----+ 4
+-+----++ 2
+++ 2
+++++--+- 4
--- 2
+-+- 2
+-++ 3
++-+ 2
--- 3
---------- 10
-+++ 2
--+-+- 2
+-+-+-+ 3
++- 2
-+-+-+-+-+ 2
-+ 2
---------- 3
+++- 3
-+++++++-- 2
-+-- 3
--++ 3
---+ 3
+-+-+-+-+- 2
--------- 3
---------- 5
+-+-+-+-+- 3
--+ 2
++-+++++++ 5
+------+ 6
+---+ 3
-++- 3
+++-+++-+ 4
-+-+- 2
++++ 3
++-+ 3
+-++ 2
--+- 2
-++++++++- 10
-++++++++- 9
-++ 2
++ 2
+------- 7
-++++++++- 2
+--+ 2
-+-- 2
++++++ 6
--+ 3
-++- 2
++-- 2
--+- 3
+++- 2
+---+++--- 6
-- 2
+-+-+-+-+ 3
---+-+- 2
-+++++++-+ 2
-+++ 3
++-+-++++- 7
+-------++ 7
+++-----+ 3
+-- 2
---- 3
----+- 2
-++++-++ 2
---+ 2
--++ 2
++++ 2
++++++++++ 10
-+- 3
--++-- 4
++- 3
+--- 3
-++ 3
-+-+ 3
+-+ 3
++-- 3
++++++-++ 5
-++++++++- 8
-+-+ 2
+--+ 3
-++++- 5
+-+ 2
+-+-+-+- 3
-+++-- 5
++++++++++ 8
+-- 3
-+++++++++ 2
+++ 3
------ 6
-+- 2
-+-+-+++ 3
+- 2""".split("\n")


# In[66]:

for i, p in enumerate(inputs):
    print("Case #"+str(i+1)+": "+str(solve(p)))


# In[61]:

solve("+++++ 4")


# In[59]:

list(enumerate(inputs))


# In[57]:

i


# In[ ]:



