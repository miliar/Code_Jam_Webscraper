#
#
# PYTHON 3.2
#
# ./a.out < input.in  | grep -v '^#'
# ----------------------------------------------------------------------------
from fractions import gcd


# ----------------------------------------------------------------------------
# GLOBALS
#
comb = {}
opps = {}


# ----------------------------------------------------------------------------
# FOO
#
def hello():
	print("x")

# ----------------------------------------------------------------------------
# FOO
#

# ----------------------------------------------------------------------------
# FOO
#
def iai(N, Pd, Pg):
	
	if (Pg == 100) and (Pd != 100):
		return "Broken"
	if (Pg == 0) and (Pd != 0):
		return "Broken"
	
	g = gcd(Pd,100)
	print("### g= {0}".format(g))
	nom = 100 // g
	print("### nom = {0}".format(nom))
	
	if nom <= N:
		return "Possible"
	else:
		return "Broken"

# ############################################################################
# ############################################################################
# ############################################################################
# ############################################################################
if __name__ == "__main__":
	T = 1
	sss = ""
	
	print("### Hello World!")
	sss = input()
	T = int(sss)
	print("### {0} Cases".format(T))
	
	for i in range(0,T):
		# - Initialize Case Vars
		# - Read Case Input
		inx = input().strip().split()
		N = int(inx[0])
		Pd = int(inx[1])
		Pg = int(inx[2])

		print("### {0},{1},{2}".format(N, Pd, Pg))

		# !!!
		sol = iai(N, Pd, Pg)
				
		
		print("Case #{0}: ".format(i+1) + sol)


