{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false,
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Case #1: CAB\n",
      "\n",
      "Case #2: MJA\n",
      "\n",
      "Case #3: OCDE\n",
      "\n",
      "Case #4: BBAAA\n",
      "\n",
      "Case #5: CCCABBBAB\n",
      "\n",
      "Case #6: CCCBAABAB\n",
      "\n",
      "Case #7: ZXCASDQWE\n",
      "\n",
      "Case #8: CBBAAAAAAAABB\n",
      "\n",
      "Case #9: CAB\n",
      "\n",
      "Case #10: ZABCD\n",
      "\n",
      "Case #11: MMJIHGFDALKECBA\n",
      "\n",
      "Case #12: CCCCABABABBBBBA\n",
      "\n",
      "Case #13: CBA\n",
      "\n",
      "Case #14: ONLJHKECAFBGDIM\n",
      "\n",
      "Case #15: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #16: CCCBBABBBBABABB\n",
      "\n",
      "Case #17: MMLKGFEBACDHIJA\n",
      "\n",
      "Case #18: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #19: MMJAHGEABCDFIKL\n",
      "\n",
      "Case #20: ONMLKCBJGIEDHFA\n",
      "\n",
      "Case #21: A\n",
      "\n",
      "Case #22: ZABYCXDWEU\n",
      "\n",
      "Case #23: ZADBC\n",
      "\n",
      "Case #24: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #25: BAAA\n",
      "\n",
      "Case #26: CCCCCBBABBAAABB\n",
      "\n",
      "Case #27: MMJIGFBALKHEDCA\n",
      "\n",
      "Case #28: CCCCCCCCABABAAB\n",
      "\n",
      "Case #29: BBBBBAAAAAAAA\n",
      "\n",
      "Case #30: DCCBBBAAAAAAB\n",
      "\n",
      "Case #31: BB\n",
      "\n",
      "Case #32: RRBAACADABA\n",
      "\n",
      "Case #33: BAAA\n",
      "\n",
      "Case #34: BAA\n",
      "\n",
      "Case #35: CCCCCAABAABBBBA\n",
      "\n",
      "Case #36: ONKMCLJIHGFEDBA\n",
      "\n",
      "Case #37: BBA\n",
      "\n",
      "Case #38: CCCCCCCCCBABABB\n",
      "\n",
      "Case #39: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #40: CCCCCCCBAABAB\n",
      "\n",
      "Case #41: BAAA\n",
      "\n",
      "Case #42: CCCCCCBBAABABBB\n",
      "\n",
      "Case #43: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #44: CCCCBAAABABABBB\n",
      "\n",
      "Case #45: CCCBAAABBAAAAAA\n",
      "\n",
      "Case #46: ZDABC\n",
      "\n",
      "Case #47: MMLKJHGFEDAICBA\n",
      "\n",
      "Case #48: CCBAAAAAAAAAB\n",
      "\n",
      "Case #49: CCCCCAABAAABAAB\n",
      "\n",
      "Case #50: BAA\n",
      "\n",
      "Case #51: OHALNJIMDFBKGEC\n",
      "\n",
      "Case #52: BAAA\n",
      "\n",
      "Case #53: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #54: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #55: YYYRJBXWSDFJMBV\n",
      "\n",
      "Case #56: ONLDKEFGHICBJMA\n",
      "\n",
      "Case #57: BA\n",
      "\n",
      "Case #58: ZEDCBAYXWU\n",
      "\n",
      "Case #59: BA\n",
      "\n",
      "Case #60: DCCBBBBBAAAAAC\n",
      "\n",
      "Case #61: AA\n",
      "\n",
      "Case #62: CCCCCCCABBBABAB\n",
      "\n",
      "Case #63: MMKAIHECABDFGJL\n",
      "\n",
      "Case #64: ZAYBXCWDUE\n",
      "\n",
      "Case #65: CCCCCCCCBBAABBB\n",
      "\n",
      "Case #66: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #67: ZYYNGDHHWQPHLML\n",
      "\n",
      "Case #68: CBBBBBAAAAAAABA\n",
      "\n",
      "Case #69: OIACLFNHGJKMEBD\n",
      "\n",
      "Case #70: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #71: AAA\n",
      "\n",
      "Case #72: CCCCCCBAAAABBAA\n",
      "\n",
      "Case #73: CCCCCBAAAAABBBB\n",
      "\n",
      "Case #74: CBA\n",
      "\n",
      "Case #75: DDCCBBBAAAAAB\n",
      "\n",
      "Case #76: CCCCCBBBAAAAABB\n",
      "\n",
      "Case #77: ZDCBA\n",
      "\n",
      "Case #78: CCBBBBBBAAAAAB\n",
      "\n",
      "Case #79: CBA\n",
      "\n",
      "Case #80: OMBADEGHIJKLCNF\n",
      "\n",
      "Case #81: BBB\n",
      "\n",
      "Case #82: BAA\n",
      "\n",
      "Case #83: DDDCBAAAAACBB\n",
      "\n",
      "Case #84: XTTSRGGDFPSLKRF\n",
      "\n",
      "Case #85: CBA\n",
      "\n",
      "Case #86: DCCCBAABBAAABA\n",
      "\n",
      "Case #87: OMLNAJIHGFEDCBK\n",
      "\n",
      "Case #88: CCCCCCCCBAABAAB\n",
      "\n",
      "Case #89: CCBBBAAAAAABA\n",
      "\n",
      "Case #90: YYVTPJHBSMDLVTW\n",
      "\n",
      "Case #91: ONMKJHDEGCIABLF\n",
      "\n",
      "Case #92: Z\n",
      "\n",
      "Case #93: CCCCCBBBBBAAAAA\n",
      "\n",
      "Case #94: ZAAAA\n",
      "\n",
      "Case #95: BBA\n",
      "\n",
      "Case #96: OMBLEHINJFGDCKA\n",
      "\n",
      "Case #97: ZYGMPQHGFTSJQVJ\n",
      "\n",
      "Case #98: CCCCCCCAABBAAAB\n",
      "\n",
      "Case #99: ZACBA\n",
      "\n",
      "Case #100: BBA\n",
      "\n"
     ]
    }
   ],
   "source": [
    "fil = open(\"A-small-attempt1.in.txt\").readlines()\n",
    "t = int(fil[0])  # read a line with a single integer\n",
    "\n",
    "\n",
    "for i in range(1,t+1):\n",
    "    s = fil[i]\n",
    "    word = s[0]\n",
    "    for j in range(1,len(s)):\n",
    "        if s[j]<word[0]:\n",
    "            word = word+s[j]\n",
    "        else:\n",
    "            word = s[j]+word\n",
    "    print \"Case #%i: %s\"%(i, word)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
