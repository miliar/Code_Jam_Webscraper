def gen_binary():
    global ans, patterns, p
    ans = ['11111111111111111111111111111111']
    patterns = ['11111111111111111111111111111001', '11111111111111111111111111100001',
                "11111111111111111111111110000001", '11111111111111111111111000000001',
                '11111111111111111111100000000001', '11111111111111111110000000000001',
                '11111111111111111000000000000001', '11111111111111100000000000000001',
                '11111111111110000000000000000001', '11111111111000000000000000000001',
                '11111111100000000000000000000001', '11111110000000000000000000000001',
                '11111000000000000000000000000001', '11100000000000000000000000000001',
                '10000000000000000000000000000001', '11111111111111111111111111101101',
                '11111111111111111111111110011001', '11111111111111111111111000110001',
                '11111111111111111111100001100001', '11111111111111111110000011000001',
                '11111111111111111000000110000001', '11111111111111100000001100000001',
                '11111111111110000000011000000001', '11111111111000000000110000000001',
                '11111111100000000001100000000001', '11111110000000000011000000000001',
                '11111000000000000110000000000001', '11100000000000001100000000000001',
                '10000000000000011000000000000001', '11111111111111111111111110111101',
                '11111111111111111111111001111001', '11111111111111111111100011110001',
                '11111111111111111110000111100001']

    for p in patterns:
        ans.append(p)
        while p[:2] != '10':
            p = p[1:] + '1'
            ans.append(p)
    return ans


def factor(n):
    if n < 4:
        return -1

    i = 2

    while i * i <= n:
        if n % i == 0:
            return i
        i += 1
    return -1


def gen_answer(binaries):
    total = 0
    op = open("op3.txt", "w")
    op.write("Case #1:\n")

    for b in binaries:
        fs = []
        for j in range(2, 11):
            f = factor(int(b, j))
            if f == -1:
                break
            else:
                fs.append(f)

        if len(fs) == 9:
            op.write(b + " ")
            op.write(" ".join(map(str, fs)))
            op.write("\n")
            total += 1
            if total == 500:
                break
        else:
            print 'Skipping', b, fs


gen_answer(gen_binary())