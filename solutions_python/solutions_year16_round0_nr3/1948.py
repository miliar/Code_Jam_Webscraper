

def is_prime(n):
    if n < 2:
        return False, None

    if n == 2:
        return True, None

    if not n & 1:
        return False, 2

    for x in range(3, int(n**0.5) + 1, 2):
        if n % x == 0:
            return False, x

    return True, None

def check(j):
    L = []
    for base in range(2, 11):
        num = int(j, base=base)
        prime, div = is_prime(num)
        if prime:
            break
        L.append(str(div))
    else:
        return True, L
    return False, L

o = open("C-large.out", "w")

o.write("case #1:\n")
J = 500
N = 30

R = [0, 3, 6, 9, 12, 15, 18, 24, 27, 30, 33, 36, 39, 45, 48, 51, 54, 57, 60, 63, 66, 72, 75, 78,
 90, 96, 99, 102, 105, 108, 111, 114, 120, 123, 126, 129, 132, 135, 141, 144, 147, 150, 153, 156,
159, 165, 177, 180, 183, 189, 192, 195, 198, 201, 204, 207, 210, 216, 219, 222, 225, 228, 231, 237,
 240, 243, 246, 249, 252, 258, 264, 267, 270, 282, 288, 291, 294, 297, 300, 303, 306, 312, 315, 318,
330, 354, 360, 363, 366, 378, 384, 387, 390, 393, 396, 399, 402, 408, 411, 414, 417, 420, 423, 429,
432, 435, 438, 441, 444, 450, 456, 459, 462, 474, 480, 483, 486, 489, 492, 498, 504, 513, 516, 519,
525, 528, 531, 534, 537, 540, 543, 549, 561, 564, 567, 573, 576, 579, 582, 585, 588, 591, 594, 600,
603, 606, 609, 612, 615, 621, 624, 627, 630, 633, 636, 645, 657, 660, 663, 669, 693, 705, 708, 711,
717, 720, 723, 726, 729, 732, 741, 753, 756, 768, 771, 774, 777, 780, 783, 786, 792, 795, 798, 801,
804, 807, 813, 816, 819, 822, 825, 828, 834, 840, 843, 846, 858, 864, 867, 870, 873, 876, 882, 888,
897, 900, 903, 909, 912, 915, 918, 921, 924, 933, 945, 948, 960, 963, 966, 969, 972, 978, 984, 993,
 996, 1008, 1023,  1026, 1032, 1035, 1038, 1050, 1056, 1059, 1062, 1065, 1068, 1071, 1074, 1080, 1083,
 1086, 1098, 1122, 1128, 1131, 1134, 1146, 1152, 1155, 1158, 1161, 1164, 1167, 1170, 1176, 1179, 1182,
1185, 1188, 1191, 1197, 1200, 1203, 1206, 1209, 1212, 1218, 1224, 1227, 1230, 1242, 1248, 1251, 1254,
1257, 1260, 1266, 1272, 1290, 1314, 1320, 1323, 1326, 1338, 1386, 1410, 1416, 1419, 1422, 1434, 1440,
 1443, 1446, 1449, 1452, 1458, 1464, 1482, 1506, 1512, 1536, 1539, 1542, 1545, 1548, 1551, 1554, 1560,
 1563, 1566, 1569, 1572, 1575, 1581, 1584, 1587, 1590, 1593, 1596, 1602, 1608, 1611, 1614, 1626, 1632,
1635, 1638, 1641, 1644, 1650, 1656, 1665, 1668, 1671, 1677, 1680, 1683, 1686, 1689, 1692, 1701, 1713,
 1716, 1728, 1731, 1734, 1737, 1740, 1746, 1752, 1761, 1764, 1776, 1791, 1794, 1800, 1803, 1806, 1818,
 1824, 1827, 1830, 1833, 1836, 1842, 1848, 1866, 1890, 1896, 1920, 1923, 1926, 1929, 1932, 1938, 1944,
 1953, 1956, 1968, 1983, 1986, 1992]
#for i in range(1023, 2**N):
for i in R:
    format_string ='1{:0NUMb}1'.replace("NUM", str(N))
    j = format_string.format(i)
    res, L = check(j)
    if res:
        J -= 1
        o.write(j + " " + " ".join(L) + "\n")
        if J == 0:
            break
        rev = j[::-1]
        if rev == j:
            continue
        res2, L = check(rev)
        if res2:
            o.write(rev + " " + " ".join(L) + "\n")
            J -= 1
            if J == 0:
                break
print(J)


