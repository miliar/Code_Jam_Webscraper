import math

baseDict = {2: [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768], 3: [1, 3, 9, 27, 81, 243, 729, 2187, 6561, 19683, 59049, 177147, 531441, 1594323, 4782969, 14348907], 4: [1, 4, 16, 64, 256, 1024, 4096, 16384, 65536, 262144, 1048576, 4194304, 16777216, 67108864, 268435456, 1073741824], 5: [1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125, 6103515625, 30517578125], 6: [1, 6, 36, 216, 1296, 7776, 46656, 279936, 1679616, 10077696, 60466176, 362797056, 2176782336, 13060694016, 78364164096, 470184984576], 7: [1, 7, 49, 343, 2401, 16807, 117649, 823543, 5764801, 40353607, 282475249, 1977326743, 13841287201, 96889010407, 678223072849, 4747561509943], 8: [1, 8, 64, 512, 4096, 32768, 262144, 2097152, 16777216, 134217728, 1073741824, 8589934592, 68719476736, 549755813888, 4398046511104, 35184372088832], 9: [1, 9, 81, 729, 6561, 59049, 531441, 4782969, 43046721, 387420489, 3486784401, 31381059609, 282429536481, 2541865828329, 22876792454961, 205891132094649], 10: [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000]}


def findDivisor(x):
    n = int(math.sqrt(x))
    for i in range(2, n + 1):
        if x % i == 0:
            return i
    return None


def base2int(bits, base):
    l = len(bits)
    val = 0
    for indx in range(l):
        if bits[indx] != '0':
            val += baseDict[base][l - 1 - indx]
    return val


def coinJam(m, n):
    res = []
    count = 0
    for num in range(2 ** (m - 1) + 1, 2 ** m, 2):
        bits = bin(num)[2:]
        flag = True
        tmp = [bits]
        for i in range(2, 11):
            value = base2int(bits, i)
            divisor = findDivisor(value)
            if divisor is not None:
                tmp.append(divisor)
            else:
                flag = False
                break
        if flag:
            if count != n:
                count += 1
                res.append(tmp)
            else:
                for i in range(n):
                    res[i] = list(map(str, res[i]))
                return res

t = input()
s = input()
s = s.split(' ')
m = int(s[0])
n = int(s[1])
print("Case #" + t + ":")
for i in coinJam(m, n):
    print(' '.join(i))







