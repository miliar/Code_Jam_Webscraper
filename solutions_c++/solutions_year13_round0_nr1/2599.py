
#include <scc/cj.h>		// http://github.com/lvv/scc
#include <lvv/lvv.h>		// http://github.com/lvv/scc



int main() {
	int cases(in);  NL;
	FOR(case_, 1, cases+1)  {
		char  M[4][5] ={'\0'};
		_  "Case #",  case_, ": ";

			iFOR(4) { cin >> M[i][0] >> M[i][1] >> M[i][2] >> M[i][3]; NL }
				; // PR1(M);
		if (
				M[0][0] + M[0][1] + M[0][2] + M[0][3] == 4 * 'X'
			||     	M[1][0] + M[1][1] + M[1][2] + M[1][3] == 4 * 'X'
			||     	M[2][0] + M[2][1] + M[2][2] + M[2][3] == 4 * 'X'
			||     	M[3][0] + M[3][1] + M[3][2] + M[3][3] == 4 * 'X'
		
			||      M[0][0] + M[1][0] + M[2][0] + M[3][0] == 4 * 'X'
			||     	M[0][1] + M[1][1] + M[2][1] + M[3][1] == 4 * 'X'
			||     	M[0][2] + M[1][2] + M[2][2] + M[3][2] == 4 * 'X'
			||     	M[0][3] + M[1][3] + M[2][3] + M[3][3] == 4 * 'X'
		
                
			// cols
			||      M[0][0] + M[0][1] + M[0][2] + M[0][3] == 3 * 'X' + 'T'
			||     	M[1][0] + M[1][1] + M[1][2] + M[1][3] == 3 * 'X' + 'T'
			||     	M[2][0] + M[2][1] + M[2][2] + M[2][3] == 3 * 'X' + 'T'
			||     	M[3][0] + M[3][1] + M[3][2] + M[3][3] == 3 * 'X' + 'T'
		
			||      M[0][0] + M[1][0] + M[2][0] + M[3][0] == 3 * 'X' + 'T'
			||     	M[0][1] + M[1][1] + M[2][1] + M[3][1] == 3 * 'X' + 'T'
			||     	M[0][2] + M[1][2] + M[2][2] + M[3][2] == 3 * 'X' + 'T'
			||     	M[0][3] + M[1][3] + M[2][3] + M[3][3] == 3 * 'X' + 'T'


			// diags
			||     	M[0][0] + M[1][1] + M[2][2] + M[3][3] == 4 * 'X'
			||     	M[0][0] + M[1][1] + M[2][2] + M[3][3] == 3 * 'X' + 'T'

			||     	M[0][0] + M[1][1] + M[2][2] + M[3][3] == 4 * 'X'
			||     	M[0][0] + M[1][1] + M[2][2] + M[3][3] == 3 * 'X' + 'T'

			||     	M[0][3] + M[1][2] + M[2][1] + M[3][0] == 4 * 'X'
			||     	M[0][3] + M[1][2] + M[2][1] + M[3][0] == 3 * 'X' + 'T'
		)                                                                
			__ "X won";                                              

		else if (
				M[0][0] + M[0][1] + M[0][2] + M[0][3] == 4 * 'O'
			||     	M[1][0] + M[1][1] + M[1][2] + M[1][3] == 4 * 'O'
			||     	M[2][0] + M[2][1] + M[2][2] + M[2][3] == 4 * 'O'
			||     	M[3][0] + M[3][1] + M[3][2] + M[3][3] == 4 * 'O'
		                                                            
			||      M[0][0] + M[1][0] + M[2][0] + M[3][0] == 4 * 'O'
			||     	M[0][1] + M[1][1] + M[2][1] + M[3][1] == 4 * 'O'
			||     	M[0][2] + M[1][2] + M[2][2] + M[3][2] == 4 * 'O'
			||     	M[0][3] + M[1][3] + M[2][3] + M[3][3] == 4 * 'O'
		                                                            
                                                                            
			// cols
			||      M[0][0] + M[0][1] + M[0][2] + M[0][3] == 3 * 'O' + 'T'
			||     	M[1][0] + M[1][1] + M[1][2] + M[1][3] == 3 * 'O' + 'T'
			||     	M[2][0] + M[2][1] + M[2][2] + M[2][3] == 3 * 'O' + 'T'
			||     	M[3][0] + M[3][1] + M[3][2] + M[3][3] == 3 * 'O' + 'T'
		                                                            
			||      M[0][0] + M[1][0] + M[2][0] + M[3][0] == 3 * 'O' + 'T'
			||     	M[0][1] + M[1][1] + M[2][1] + M[3][1] == 3 * 'O' + 'T'
			||     	M[0][2] + M[1][2] + M[2][2] + M[3][2] == 3 * 'O' + 'T'
			||     	M[0][3] + M[1][3] + M[2][3] + M[3][3] == 3 * 'O' + 'T'

			// diags
			||     	M[0][0] + M[1][1] + M[2][2] + M[3][3] == 4 * 'O'
			||     	M[0][0] + M[1][1] + M[2][2] + M[3][3] == 3 * 'O' + 'T'

			||     	M[0][3] + M[1][2] + M[2][1] + M[3][0] == 4 * 'O'
			||     	M[0][3] + M[1][2] + M[2][1] + M[3][0] == 3 * 'O' + 'T'
		)                                                                
			__ "O won";                                              

		else if (
				find(M[0], M[0]+4, '.') != M[0]+4
			||     	find(M[1], M[1]+4, '.') != M[1]+4
			||     	find(M[2], M[2]+4, '.') != M[2]+4
			||     	find(M[3], M[3]+4, '.') != M[3]+4
		)                                                                
			__ "Game has not completed";                                              
		else                                                             
			__ "Draw";                                     
	}                                                                        
}                                                                                
// vim:ft=cpp                                                                    
