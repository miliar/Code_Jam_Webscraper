#include <iostream>

const char *game_result(const char f[4][4])
{
	bool x = false;
	bool o = false;
	bool completed = true;
	if (f[0][0] == '.' || f[0][1] == '.' || f[0][2] == '.' || f[0][3] == '.' || f[1][0] == '.' || f[1][1] == '.' || f[1][2] == '.' || f[1][3] == '.'
		|| f[2][0] == '.' || f[2][1] == '.' || f[2][2] == '.' || f[2][3] == '.' || f[3][0] == '.' || f[3][1] == '.' || f[3][2] == '.' || f[3][3] == '.')
	{
		completed = false;
	}
	if (!x && (f[0][0] == 'X' || f[0][0] == 'T') && (f[0][1] == 'X' || f[0][1] == 'T') && (f[0][2] == 'X' || f[0][2] == 'T') && (f[0][3] == 'X' || f[0][3] == 'T'))
	{
		x = true;
	}
	if (!x && (f[1][0] == 'X' || f[1][0] == 'T') && (f[1][1] == 'X' || f[1][1] == 'T') && (f[1][2] == 'X' || f[1][2] == 'T') && (f[1][3] == 'X' || f[1][3] == 'T'))
	{
		x = true;
	}
	if (!x && (f[2][0] == 'X' || f[2][0] == 'T') && (f[2][1] == 'X' || f[2][1] == 'T') && (f[2][2] == 'X' || f[2][2] == 'T') && (f[2][3] == 'X' || f[2][3] == 'T'))
	{
		x = true;
	}
	if (!x && (f[3][0] == 'X' || f[3][0] == 'T') && (f[3][1] == 'X' || f[3][1] == 'T') && (f[3][2] == 'X' || f[3][2] == 'T') && (f[3][3] == 'X' || f[3][3] == 'T'))
	{
		x = true;
	}
	if (!x && (f[0][0] == 'X' || f[0][0] == 'T') && (f[1][0] == 'X' || f[1][0] == 'T') && (f[2][0] == 'X' || f[2][0] == 'T') && (f[3][0] == 'X' || f[3][0] == 'T'))
	{
		x = true;
	}
	if (!x && (f[0][1] == 'X' || f[0][1] == 'T') && (f[1][1] == 'X' || f[1][1] == 'T') && (f[2][1] == 'X' || f[2][1] == 'T') && (f[3][1] == 'X' || f[3][1] == 'T'))
	{
		x = true;
	}
	if (!x && (f[0][2] == 'X' || f[0][2] == 'T') && (f[1][2] == 'X' || f[1][2] == 'T') && (f[2][2] == 'X' || f[2][2] == 'T') && (f[3][2] == 'X' || f[3][2] == 'T'))
	{
		x = true;
	}
	if (!x && (f[0][3] == 'X' || f[0][3] == 'T') && (f[1][3] == 'X' || f[1][3] == 'T') && (f[2][3] == 'X' || f[2][3] == 'T') && (f[3][3] == 'X' || f[3][3] == 'T'))
	{
		x = true;
	}
	if (!x && (f[0][0] == 'X' || f[0][0] == 'T') && (f[1][1] == 'X' || f[1][1] == 'T') && (f[2][2] == 'X' || f[2][2] == 'T') && (f[3][3] == 'X' || f[3][3] == 'T'))
	{
		x = true;
	}
	if (!x && (f[0][3] == 'X' || f[0][3] == 'T') && (f[1][2] == 'X' || f[1][2] == 'T') && (f[2][1] == 'X' || f[2][1] == 'T') && (f[3][0] == 'X' || f[3][0] == 'T'))
	{
		x = true;
	}

	if (!o && (f[0][0] == 'O' || f[0][0] == 'T') && (f[0][1] == 'O' || f[0][1] == 'T') && (f[0][2] == 'O' || f[0][2] == 'T') && (f[0][3] == 'O' || f[0][3] == 'T'))
	{
		o = true;
	}
	if (!o && (f[1][0] == 'O' || f[1][0] == 'T') && (f[1][1] == 'O' || f[1][1] == 'T') && (f[1][2] == 'O' || f[1][2] == 'T') && (f[1][3] == 'O' || f[1][3] == 'T'))
	{
		o = true;
	}
	if (!o && (f[2][0] == 'O' || f[2][0] == 'T') && (f[2][1] == 'O' || f[2][1] == 'T') && (f[2][2] == 'O' || f[2][2] == 'T') && (f[2][3] == 'O' || f[2][3] == 'T'))
	{
		o = true;
	}
	if (!o && (f[3][0] == 'O' || f[3][0] == 'T') && (f[3][1] == 'O' || f[3][1] == 'T') && (f[3][2] == 'O' || f[3][2] == 'T') && (f[3][3] == 'O' || f[3][3] == 'T'))
	{
		o = true;
	}
	if (!o && (f[0][0] == 'O' || f[0][0] == 'T') && (f[1][0] == 'O' || f[1][0] == 'T') && (f[2][0] == 'O' || f[2][0] == 'T') && (f[3][0] == 'O' || f[3][0] == 'T'))
	{
		o = true;
	}
	if (!o && (f[0][1] == 'O' || f[0][1] == 'T') && (f[1][1] == 'O' || f[1][1] == 'T') && (f[2][1] == 'O' || f[2][1] == 'T') && (f[3][1] == 'O' || f[3][1] == 'T'))
	{
		o = true;
	}
	if (!o && (f[0][2] == 'O' || f[0][2] == 'T') && (f[1][2] == 'O' || f[1][2] == 'T') && (f[2][2] == 'O' || f[2][2] == 'T') && (f[3][2] == 'O' || f[3][2] == 'T'))
	{
		o = true;
	}
	if (!o && (f[0][3] == 'O' || f[0][3] == 'T') && (f[1][3] == 'O' || f[1][3] == 'T') && (f[2][3] == 'O' || f[2][3] == 'T') && (f[3][3] == 'O' || f[3][3] == 'T'))
	{
		o = true;
	}
	if (!o && (f[0][0] == 'O' || f[0][0] == 'T') && (f[1][1] == 'O' || f[1][1] == 'T') && (f[2][2] == 'O' || f[2][2] == 'T') && (f[3][3] == 'O' || f[3][3] == 'T'))
	{
		o = true;
	}
	if (!o && (f[0][3] == 'O' || f[0][3] == 'T') && (f[1][2] == 'O' || f[1][2] == 'T') && (f[2][1] == 'O' || f[2][1] == 'T') && (f[3][0] == 'O' || f[3][0] == 'T'))
	{
		o = true;
	}

	if (x && o)
	{
		return "Draw";
	}
	if (x)
	{
		return "X won";
	}
	if (o)
	{
		return "O won";
	}
	if (completed)
	{
		return "Draw";
	}
	return "Game has not completed";
}

int main()
{
	char field[4][4];
	int t;
	std::cin >> t;
	for (int i = 0; i < t; ++i)
	{
		for (int j = 0; j < 16; ++j)
		{
			std::cin >> field[j / 4][j % 4];
		}
		std::cout << "Case #" << i + 1 << ": " << game_result(field) << std::endl;
	}
	return 0;
}
