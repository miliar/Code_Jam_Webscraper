//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#####################################################################`,##################################//
//#####################################################################  ##################################//
//#####################################################################,  ``###############################//
//#####################################################################+   +###############################//
//#####################################################################'  `################################//
//####################################################################.  ,#################################//
//##################################################################+`  '##################################//
//##############################################################+ .    ####################################//
//#############################################################;`#.  `#####################################//
//############,    .###########,`    `,########`      '#######`:#   .######,`  `+###,`                `.###//
//###########.       ##########,      ,#######       +######, '+   :#####+       :##.                   :##//
//###########        '#########,      ,######       ######:   .   ######:         ##.                   ,##//
//##########,         #########,      ,#####       ######`      `######`          ##.                   ,##//
//##########          +########,      ,####       ######       `######`           ##,                   :##//
//#########'          `########,      ,###.      #####+       .######             ##############;       ###//
//#########     `:     ########,      ,##;      +###++       .######              ##############       ;###//
//########+     +#     .#######,      ,##      ;###;        .#####+       '       #############:       ####//
//########`     ##`     #######,      ,#`     `###.        .#####;       +#       #############       +####//
//########     .##+     ,######,      ,#      ##+         ,#####.       ###       ############       .#####//
//#######`     +###      ######,      ,#      ###        ,#####.      `####       ###########,       ######//
//#######      ####:     ;#####,      ,#      .#        ,#####,      ,#####       ##########+       '######//
//######.                 #####,      ,#       +       .######       `            ````######       `#######//
//######                  '####,      ,#'       +    ,#######+                        #####`       +#######//
//#####,                   ####,      ,##`       '  +########+                        ####'       :########//
//#####                    '###,      ,###        +###########                        ####        #########//
//####:      +#######       ###,      ,##++        `##########                        ###        +#########//
//####       ########.      +##,      ,#,  #`        `#########.                      ##;       .##########//
//###'      `########+      `##,      ,,    :;           :+#####+##########:      ######        ###########//
//###`      ##########       +#,      ,       +.               .###########:      #####`       :###########//
//###      `##########,      ,#,      ,        .#`              ###########:      #####        ############//
//##################################+       :# ++##:            ###########################################//
//##################################.       ##;+######,         ###########################################//
//##################################,      .#;:##########+:`    ###########################################//
//##################################         +#############################################################//
//#################################         ;##############################################################//
//################################    `#    ;##############################################################//
//###############################     ###   ,##############################################################//
//#############################`     '###`   ##############################################################//
//############################      `####,   '#############################################################//
//###########################       #####'    #############################################################//
//##########################       :######   ;#############################################################//
//#########################        #######+'###############################################################//
//########################        +########################################################################//
//#######################        .#########################################################################//
//######################         ##########################################################################//
//#####################`        ;##########################################################################//
//#####################`       `###########################################################################//
//######################       ############################################################################//
//#######################`    ,############################################################################//
//########################.   #############################################################################//
//#########################: ##############################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//

#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <cassert>
#include <algorithm>
#include <iomanip>
#include <deque>

using namespace std;

const int INF = 1e9;

string calc(long long n)
{
	string result = "";
	while (n)
	{
		result += '0' + n % 10;
		n /= 10;
	}
	reverse(result.begin(), result.end());
	return result;
}

void solve()
{
	string s;
	//s = calc(n);
	cin >> s;

	int pos = -1;
	for (int i = 1; i < s.length(); i++)
	{
		if (s[i] < s[i - 1])
		{
			pos = i - 1;
			break;
		}
	}

	if (pos == -1)
	{
		cout << s << endl;
		return;
	}

	int cell = 0;
	for (int i = pos - 1; i >= 0; i--)
	{
		if (s[i] != s[pos])
		{
			cell = i + 1;
		}
	}

	assert(s[cell] != '0');
	s[cell]--;
	for (int i = cell + 1; i < s.length(); i++)
	{
		s[i] = '9';
	}

	while (s[0] == '0')
	{
		s = s.substr(1);
	}

	cout << s << endl;
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int t;
	cin >> t;

	for (int i = 0; i < t; i++)
	{
		cout << "Case #" << i + 1 << ": ";
		solve();
	}

	return 0;
}