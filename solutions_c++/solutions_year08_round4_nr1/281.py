#include<stdio.h>
#include<memory.h>
#include<set>
#include<map>
#include<vector>
#include<string.h>
#include<string>
#include<iostream>
#include<algorithm>
using namespace std;

int n1,i1,g[10010],c[10010],v,m,mm,i;
int dp[10010][2];

int main()
{
    scanf("%d",&n1);
    for(i1=1;i1<=n1;i1++)
    {
        scanf("%d %d",&m,&v);
        mm=(m-1)/2;
        for(i=1;i<=mm;i++)
        {
            scanf("%d %d",&g[i],&c[i]);
        }
        for(i=mm+1;i<=m;i++)
        {
            scanf("%d",&g[i]);
        }
        memset(dp,-1,sizeof(dp));
        for(i=mm+1;i<=m;i++)
        {
            dp[i][g[i]]=0;
        }
        for(i=mm;i>=1;i--)
        {
            if(g[i]==1)//AND
            {
                if(dp[i*2][1]!=-1&&dp[i*2+1][1]!=-1)
                {
                    if(dp[i][1]==-1||dp[i][1]>dp[i*2][1]+dp[i*2+1][1])
                        dp[i][1]=dp[i*2][1]+dp[i*2+1][1];
                }
                if(dp[i*2][1]!=-1&&dp[i*2+1][0]!=-1)
                {
                    if(dp[i][0]==-1||dp[i][0]>dp[i*2][1]+dp[i*2+1][0])
                        dp[i][0]=dp[i*2][1]+dp[i*2+1][0];
                }                
                if(dp[i*2][0]!=-1&&dp[i*2+1][0]!=-1)
                {
                    if(dp[i][0]==-1||dp[i][0]>dp[i*2][0]+dp[i*2+1][0])
                        dp[i][0]=dp[i*2][0]+dp[i*2+1][0];
                }
                if(dp[i*2][0]!=-1&&dp[i*2+1][1]!=-1)
                {
                    if(dp[i][0]==-1||dp[i][0]>dp[i*2][0]+dp[i*2+1][1])
                        dp[i][0]=dp[i*2][0]+dp[i*2+1][1];
                }
            }
            else//OR
            {
                if(dp[i*2][0]!=-1&&dp[i*2+1][0]!=-1)
                {
                    if(dp[i][0]==-1||dp[i][0]>dp[i*2][0]+dp[i*2+1][0])
                        dp[i][0]=dp[i*2][0]+dp[i*2+1][0];
                }
                if(dp[i*2][1]!=-1&&dp[i*2+1][0]!=-1)
                {
                    if(dp[i][1]==-1||dp[i][1]>dp[i*2][1]+dp[i*2+1][0])
                        dp[i][1]=dp[i*2][1]+dp[i*2+1][0];
                }                
                if(dp[i*2][1]!=-1&&dp[i*2+1][1]!=-1)
                {
                    if(dp[i][1]==-1||dp[i][1]>dp[i*2][1]+dp[i*2+1][1])
                        dp[i][1]=dp[i*2][1]+dp[i*2+1][1];
                }
                if(dp[i*2][0]!=-1&&dp[i*2+1][1]!=-1)
                {
                    if(dp[i][1]==-1||dp[i][1]>dp[i*2][0]+dp[i*2+1][1])
                        dp[i][1]=dp[i*2][0]+dp[i*2+1][1];
                }               
            }   
            if(c[i]==1)
            {
                if(g[i]==0)//AND
                {
                    if(dp[i*2][1]!=-1&&dp[i*2+1][1]!=-1)
                    {
                        if(dp[i][1]==-1||dp[i][1]>dp[i*2][1]+dp[i*2+1][1])
                            dp[i][1]=dp[i*2][1]+dp[i*2+1][1]+1;
                    }
                    if(dp[i*2][1]!=-1&&dp[i*2+1][0]!=-1)
                    {
                        if(dp[i][0]==-1||dp[i][0]>dp[i*2][1]+dp[i*2+1][0])
                            dp[i][0]=dp[i*2][1]+dp[i*2+1][0]+1;
                    }                
                    if(dp[i*2][0]!=-1&&dp[i*2+1][0]!=-1)
                    {
                        if(dp[i][0]==-1||dp[i][0]>dp[i*2][0]+dp[i*2+1][0])
                            dp[i][0]=dp[i*2][0]+dp[i*2+1][0]+1;
                    }
                    if(dp[i*2][0]!=-1&&dp[i*2+1][1]!=-1)
                    {
                        if(dp[i][0]==-1||dp[i][0]>dp[i*2][0]+dp[i*2+1][1])
                            dp[i][0]=dp[i*2][0]+dp[i*2+1][1]+1;
                    }
                }
                else//OR
                {
                    if(dp[i*2][0]!=-1&&dp[i*2+1][0]!=-1)
                    {
                        if(dp[i][0]==-1||dp[i][0]>dp[i*2][0]+dp[i*2+1][0])
                            dp[i][0]=dp[i*2][0]+dp[i*2+1][0]+1;
                    }
                    if(dp[i*2][1]!=-1&&dp[i*2+1][0]!=-1)
                    {
                        if(dp[i][1]==-1||dp[i][1]>dp[i*2][1]+dp[i*2+1][0])
                            dp[i][1]=dp[i*2][1]+dp[i*2+1][0]+1;
                    }                
                    if(dp[i*2][1]!=-1&&dp[i*2+1][1]!=-1)
                    {
                        if(dp[i][1]==-1||dp[i][1]>dp[i*2][1]+dp[i*2+1][1])
                            dp[i][1]=dp[i*2][1]+dp[i*2+1][1]+1;
                    }
                    if(dp[i*2][0]!=-1&&dp[i*2+1][1]!=-1)
                    {
                        if(dp[i][1]==-1||dp[i][1]>dp[i*2][0]+dp[i*2+1][1])
                            dp[i][1]=dp[i*2][0]+dp[i*2+1][1]+1;
                    }               
                }                   
            }    
        }
        printf("Case #%d: ",i1);
        if(dp[1][v]==-1)
            printf("IMPOSSIBLE\n");
        else
            printf("%d\n",dp[1][v]);
    }    
    return 0;
}
