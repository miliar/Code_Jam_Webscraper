#include <iostream>
#include <cmath>
#include <cstring>
#include <queue>
#include <vector>
#include <cstdio>
#include <map>
#include <stack>
#include <set>
#include <algorithm>
#define ll long long
using namespace std;
const int Maxn = 610 , Maxm = 11, Mo = 1e9 + 7;
const ll oo = 1ll << 60;
#define PB push_back

int T, cs = 1;
int n , m , k;
int vis[Maxn * 2];
int SG[Maxn * 2] = {0,0,1,2,3,1,4,3,2,4,5,6,7,8,9,7,6,9,8,11,10,12,13,10,11,13,12,15,14,16,17,5,15,17,16,19,18,20,21,18,19,21,20,23,22,25,24,22,23,24,25,26,27,29,28,27,26,28,29,30,31,14,32,31,30,32,33,34,35,37,36,35,34,36,37,38,39,40,41,39,38,41,40,43,42,44,45,42,43,45,44,47,46,48,49,46,47,49,48,51,50,52,53,50,51,53,52,55,54,57,56,54,55,56,57,58,59,61,60,59,58,60,61,62,63,64,65,63,62,65,64,67,66,68,69,66,67,69,68,71,70,73,72,70,71,72,73,74,75,77,76,75,74,76,77,78,79,81,80,79,78,80,81,82,83,85,84,83,82,84,85,86,87,88,89,87,86,89,88,91,90,92,93,90,91,93,92,95,94,96,97,94,95,97,96,99,98,100,101,33,99,101,100,103,102,105,104,102,103,104,105,106,107,109,108,107,106,108,109,110,111,113,112,111,110,112,113,114,115,117,116,115,114,116,117,118,119,120,121,119,118,121,120,123,122,124,125,122,123,125,124,127,126,128,129,126,127,129,128,131,130,132,133,130,131,133,132,135,134,137,136,134,135,136,137,138,139,141,140,139,138,140,141,142,143,145,144,143,142,144,145,146,147,149,148,147,146,148,149,150,151,152,153,151,150,153,152,155,154,156,157,154,155,157,156,159,158,160,161,158,159,161,160,163,162,164,165,162,163,165,164,167,166,169,168,166,167,168,169,170,171,98,172,171,170,172,173,174,175,177,176,175,174,176,177,178,179,181,180,179,178,180,181,182,183,184,185,183,182,185,184,187,186,188,189,186,187,189,188,191,190,193,192,190,191,192,193,194,195,197,196,195,194,196,197,198,199,200,201,199,198,201,200,203,202,204,205,202,203,205,204,207,206,208,209,206,207,209,208,211,210,212,213,210,211,213,212,215,214,217,216,214,215,216,217,218,219,221,220,219,218,220,221,222,223,225,224,223,222,224,225,226,227,229,228,227,226,228,229,230,231,232,233,231,230,233,232,235,234,236,237,234,235,237,236,239,238,240,241,238,239,241,240,243,242,244,245,242,243,245,244,247,246,249,248,246,247,248,249,250,251,253,252,251,250,252,253,254,255,256,257,173,254,257,256,259,258,260,261,258,259,261,260,263,262,265,264,262,263,264,265,266,267,269,268,267,266,268,269,270,271,273,272,271,270,272,273,274,275,277,276,275,274,276,277,278,279,280,281,279,278,281,280,283,282,284,285,282,283,285,284,287,286,288,289,286,287,289,288,291,290,292,293,290,291,293,292,295,294,297,296,294,295,296,297,298,299,301,300,299,298};
ll f[Maxn][Maxm][Maxn];
ll C[Maxn][Maxn];

int dfs(int x);
void ddfs(int x, int k,int v,int pre, map<int,bool>& cnt){
    if (pre * k > x) return;
    if (k == 1){
        cnt[v ^ dfs(x)] = 1;
        return;
    }
    for (int i=pre;i<=x;i++){        
        ddfs(x - i, k - 1, v ^ dfs(i), i, cnt);
    }
}
int dfs(int x){
    if (vis[x]) return SG[x];
    vis[x] = 1;
    map<int,bool> cnt;
    for (int i = 2; i <= k; i++)
        ddfs(x, i, 0, 1, cnt);
    for (SG[x] = 0; cnt[SG[x]]; SG[x]++);
    return SG[x];
} 

ll dfs(int n, int pw, ll cnt){
    // cout << n <<" "<< pw <<" "<< cnt << endl;
    if (n == 0) return cnt;    
    if (pw > n) return 0;
    ll ans = 0;
    for (int i = 0;i <= min(n / pw, m); i+= 2){        
        ans += dfs(n - i * pw, pw * 2, (cnt * C[m][i]) % Mo);
        ans %= Mo;
    }
    return ans;
}
int cnt[Maxn];
int main(){
    C[0][0] = 1;
    for (int i = 1; i <= 600; i++){
        C[i][0] = 1;
        for (int j = 1; j <= i; j++)
            (C[i][j] = C[i-1][j] + C[i-1][j-1]) %= Mo;
    }

    cin >> n >> m >> k;
    
    if (k == 2)
        for(int i = 2; i <= n; i++) SG[i] = (i - 1) % 2;

    if (k > 3){
        ll ans = C[n-1][m-1] - dfs(n - m, 1, 1);
        // cout << ans << endl;
        cout << (ans + Mo) % Mo << endl;
        return 0;
    }
    int mS = n;
    if (k == 2) mS = 4;
    if (k == 3) mS = 200;

    f[0][0][0] = 1;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
            for (int s = 0; s < mS; s++)
                for (int a = 1; a <= i; a++)
                    (f[i][j][s] += f[i - a][j - 1][s ^ SG[a]]) %= Mo;        
    cout << (C[n-1][m-1] - f[n][m][0] + Mo) % Mo << endl;

}