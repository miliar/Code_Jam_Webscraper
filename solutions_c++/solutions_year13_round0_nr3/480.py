#include<stdio.h>
#include<math.h>
#include<algorithm>

typedef long long LL;

//結果をデフォルト引数でなく、位置引数と取る関数の中に再起するラムダ式書こうとしたが、ラムダ式の末尾再帰がよく分からなかった
template<class T>
T Reverse(T val, T result=T()){
	return val ? Reverse(val/10, result*10+val%10) : result;
}

template<class T>
int Digit(T x, int result=0){
	return x ? Digit(x/10,result+1) : result;
}

LL SolveByForce(LL a, LL b){

	int c[30] = {};

	LL res=0, i=1;
	while(i*i<a)
		++i;
	for(; i*i<=b; ++i){
		LL x=i*i;
		if(i == Reverse(i) && x == Reverse(x)){
			++res;
			printf("%lld\n",x);
			++c[Digit(i)];
		}
	}

}


LL SolveByEmbedded(LL a, LL b){
	//事前に計算して埋め込んでいるもの
	LL c[] = {
		1,
		4,
		9,
		121,
		484,
		10201,
		12321,
		14641,
		40804,
		44944,
		1002001,
		1234321,
		4008004,
		100020001,
		102030201,
		104060401,
		121242121,
		123454321,
		125686521,
		400080004,
		404090404,
		10000200001,
		10221412201,
		12102420121,
		12345654321,
		40000800004,
		1000002000001,
		1002003002001,
		1004006004001,
		1020304030201,
		1022325232201,
		1024348434201,
		1210024200121,
		1212225222121,
		1214428244121,
		1232346432321,
		1234567654321,
		4000008000004,
		4004009004004,
		100000020000001,
		100220141022001,
		102012040210201,
		102234363432201,
		121000242000121,
		121242363242121,
		123212464212321,
		123456787654321,
		400000080000004,
		10000000200000001,
		10002000300020001,
		10004000600040001,
		10020210401202001,
		10022212521222001,
		10024214841242001,
		10201020402010201,
		10203040504030201,
		10205060806050201,
		10221432623412201,
		10223454745432201,
		12100002420000121,
		12102202520220121,
		12104402820440121,
		12122232623222121,
		12124434743442121,
		12321024642012321,
		12323244744232321,
		12343456865434321,
		12345678987654321,
		40000000800000004,
		40004000900040004,
	};
	int n = sizeof(c)/sizeof(c[0]);
	return std::count_if(c, c+n, [a,b](LL x){return a<=x && x<=b;});
}


int main() {
	int T, caseNum;
	scanf("%d",&T);
	for(caseNum = 1; caseNum <= T; ++caseNum) {

		LL a,b;
		scanf("%lld%lld",&a,&b);

		printf("Case #%d: ", caseNum);
		printf("%lld\n",SolveByEmbedded(a,b));
	}
	return 0;
}

/*
実験した結果、自乗前の数値は、
1桁の場合は1,2,3
2桁以上の場合は0,1,2
だけが登場する模様

ならば、Large-2も自由度は3^25となり、常識的な時間で終わるのではないだろうか
(多倍長に掛かる時間は不明)

*/