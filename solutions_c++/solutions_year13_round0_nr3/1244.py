
# include <stdio.h>
# include <stdlib.h>
# include <cstdlib>
# include <iostream>
# include <cstdio>
# include <string>
# include <cstring>
# include <sstream>
# include <math.h>
# include <algorithm>
# include <map>
# include <vector>
# include <stack>
# include <queue>
# include <set>
#include <vector>

using namespace std;

char c[20];

inline bool pali(int i){
	//palindrome check
	int j=0;
	while(i){
		c[j]=i%10;
		i/=10;
		j++;
	}
	j--;
	while(i < j){
		if(c[i]==c[j]){
			i++;
			j--;
		}
		else
			break;
	}
	if(i >= j)return true;
	else return false;
}

int main(){
	int cnt,cases,i,j,l,m,n,ans;
	cin >> cases;
	unsigned long long int k,a,b,dp[160]={ 0 , 1 , 4 , 9 , 121 , 484 , 676 , 10201 , 12321 , 14641 , 40804 , 44944 , 69696, 94249 , 698896 , 1002001 , 1234321 , 4008004 , 5221225 , 6948496 , 100020001 , 102030201 , 104060401 , 121242121 , 123454321 , 125686521 , 400080004 , 404090404 , 522808225 , 617323716 , 942060249 , 10000200001 , 10221412201 , 12102420121 , 12345654321 , 40000800004 , 637832238736 , 1000002000001 , 1002003002001 , 1004006004001 , 1020304030201 , 1022325232201 , 1024348434201 , 1086078706801 , 1210024200121 , 1212225222121 , 1214428244121 , 1230127210321 , 1232346432321 , 1234567654321 , 1615108015161 , 4000008000004 , 4004009004004 , 4051154511504 , 5265533355625 , 9420645460249 , 100000020000001 , 100220141022001 , 102012040210201 , 102234363432201 , 121000242000121 , 121242363242121 , 123212464212321 , 123456787654321 , 123862676268321 , 144678292876441 , 165551171155561 , 400000080000004 , 900075181570009 , 4099923883299904 , 10000000200000001 , 10002000300020001 , 10004000600040001 , 10020210401202001 , 10022212521222001 , 10024214841242001 , 10201020402010201 , 10203040504030201 , 10205060806050201 , 10221432623412201 , 10223454745432201 , 12100002420000121 , 12102202520220121 , 12104402820440121 , 12120030703002121 , 12122232623222121 , 12124434743442121 , 12321024642012321 , 12323244744232321 , 12341234943214321 , 12343456865434321 , 12345678987654321 , 40000000800000004 , 40004000900040004 , 94206450305460249 , 1000000002000000001 , 1000220014100220001 , 1002003004003002001 , 1002223236323222001 , 1020100204020010201 , 1020322416142230201 , 1022123226223212201 , 1022345658565432201 , 1210000024200000121 , 1210242036302420121 , 1212203226223022121 , 1212445458545442121 , 1232100246420012321 , 1232344458544432321 , 1234323468643234321 , 4000000008000000004 , 4253436912196343524 , 6158453974793548516 , 7766279651452241921 , 7768279661452441921 , 7770279691452641921 , 7786480671554261921 , 7788480883554461921 , 7790481115554661921 , 7966399671473243921 , 7968401681673443921 , 7970403711873643921 , 7986620893595263921 , 7988623105795463921 , 9776281671652252121 , 9778301681672452121 , 9780321711692652121 , 9796684691956272121 , 9798704903976472121 , 9898817268187473121 , 9976379903453254121 , 9978401893673454121 , 9980423903893654121 , 9996802923777274121 , 9998825115997474121 , 10000847328217674121 , 11956386935153333321 , 10319535799742690425 , 10321735809744890425 , 10323935839747090425 , 10339556627862710425 , 10341756819864910425 , 10343957031867110425 , 10539657819963712425 , 10541859830165912425 , 10559696849903732425 , 10561899042105932425 , 10564101254308132425 , 12529538021942702625 , 12531758031964902625 , 12549740850244722625 , 12551961042266922625 , 12554181254289122625 , 12751660244163924625 , 12753882254386124625 , 18378187155002928937 , 12618374532099416068 , 12622374542099816068 , 6306256632223072977 , 2196215559808651425 };
	for(cnt = 1; cnt <= cases ; cnt++){
		cin >> a >> b;
		for(i = 0,ans = 0 ; i < 160 ; i++){
			if((dp[i] >= a)&&(dp[i] <= b)){
					k = (long long int)sqrt(dp[i]*1.0);
					if((k*k == dp[i])&&(pali(k)))
						ans++;
			}
		}
		cout << "Case #" << cnt << ": " << ans << endl;
	}

	return 0;
}
