#include <iostream>
#include <sstream>
#include <vector>
#include <algorithm>

using namespace std;

typedef unsigned long long uint64;

int main()
{
	ios_base::sync_with_stdio(0);
	int test_cases;
	cin >> test_cases;
	vector<uint64> v = {
		1ULL,
		4ULL,
		9ULL,
		121ULL,
		484ULL,
		10201ULL,
		12321ULL,
		14641ULL,
		40804ULL,
		44944ULL,
		1002001ULL,
		1234321ULL,
		4008004ULL,
		100020001ULL,
		102030201ULL,
		104060401ULL,
		121242121ULL,
		123454321ULL,
		125686521ULL,
		400080004ULL,
		404090404ULL,
		10000200001ULL,
		10221412201ULL,
		12102420121ULL,
		12345654321ULL,
		40000800004ULL,
		1000002000001ULL,
		1002003002001ULL,
		1004006004001ULL,
		1020304030201ULL,
		1022325232201ULL,
		1024348434201ULL,
		1210024200121ULL,
		1212225222121ULL,
		1214428244121ULL,
		1232346432321ULL,
		1234567654321ULL,
		4000008000004ULL,
		4004009004004ULL,
		100000020000001ULL,
		100220141022001ULL,
		102012040210201ULL,
		102234363432201ULL,
		121000242000121ULL,
		121242363242121ULL,
		123212464212321ULL,
		123456787654321ULL,
		400000080000004ULL,
		10000000200000001ULL,
		10002000300020001ULL,
		10004000600040001ULL,
		10020210401202001ULL,
		10022212521222001ULL,
		10024214841242001ULL,
		10201020402010201ULL,
		10203040504030201ULL,
		10205060806050201ULL,
		10221432623412201ULL,
		10223454745432201ULL,
		12100002420000121ULL,
		12102202520220121ULL,
		12104402820440121ULL,
		12122232623222121ULL,
		12124434743442121ULL,
		12321024642012321ULL,
		12323244744232321ULL,
		12343456865434321ULL,
		12345678987654321ULL,
		40000000800000004ULL,
		40004000900040004ULL,
		1000000002000000001ULL,
		1000220014100220001ULL,
		1002003004003002001ULL,
		1002223236323222001ULL,
		1020100204020010201ULL,
		1020322416142230201ULL,
		1022123226223212201ULL,
		1022345658565432201ULL,
		1210000024200000121ULL,
		1210242036302420121ULL,
		1212203226223022121ULL,
		1212445458545442121ULL,
		1232100246420012321ULL,
		1232344458544432321ULL,
		1234323468643234321ULL,
		4000000008000000004ULL,
		/*
		100000000020000000001ULL,
		100002000030000200001ULL,
		100004000060000400001ULL,
		100020201040102020001ULL,
		100022201252102220001ULL,
		100024201484102420001ULL,
		100200120040021002001ULL,
		100202122050221202001ULL,
		100204124080421402001ULL,
		100220341262143022001ULL,
		100222343474343222001ULL,
		102010002040200010201ULL,
		102012022050220210201ULL,
		102014042080240410201ULL,
		102030405060504030201ULL,
		102032425272524230201ULL,
		102212122262221212201ULL,
		102214144272441412201ULL,
		102232545484545232201ULL,
		102234567696765432201ULL,
		121000000242000000121ULL,
		121002200252002200121ULL,
		121004400282004400121ULL,
		121022221262122220121ULL,
		121024421474124420121ULL,
		121220122262221022121ULL,
		121222324272423222121ULL,
		121242363484363242121ULL,
		121244565696565442121ULL,
		123210002464200012321ULL,
		123212222474222212321ULL,
		123232425484524232321ULL,
		123234645696546432321ULL,
		123432124686421234321ULL,
		123434346696643434321ULL,
		400000000080000000004ULL,
		400004000090000400004ULL,
		10000000000200000000001ULL,
		10000220001410002200001ULL,
		10002002100400120020001ULL,
		10002222123632122220001ULL,
		10020010200400201002001ULL,
		10020230421612403202001ULL,
		10022014302620341022001ULL,
		10022234545854543222001ULL,
		10201000020402000010201ULL,
		10201222221612222210201ULL,
		10203022140604122030201ULL,
		10203244363836344230201ULL,
		10221210222622201212201ULL,
		10221432643834623412201ULL,
		10223234344844343232201ULL,
		12100000002420000000121ULL,
		12100242003630024200121ULL,
		12102202302620320220121ULL,
		12102444325852344420121ULL,
		12122010222622201022121ULL,
		12122252443834425222121ULL,
		12124214524842541242121ULL,
		12321000024642000012321ULL,
		12321244225852244212321ULL,
		12323222344844322232321ULL,
		12343210246864201234321ULL,
		40000000000800000000004ULL,
		1000000000002000000000001ULL,
		1000002000003000002000001ULL,
		1000004000006000004000001ULL,
		1000020200104010020200001ULL,
		1000022200125210022200001ULL,
		1000024200148410024200001ULL,
		1000200030004000300020001ULL,
		1000202030205020302020001ULL,
		1000204030408040304020001ULL,
		1000220232126212320220001ULL,
		1000222232347432322220001ULL,
		1002001002004002001002001ULL,
		1002003004005004003002001ULL,
		1002005006008006005002001ULL,
		1002021222306032221202001ULL,
		1002023224327234223202001ULL,
		1002201232026202321022001ULL,
		1002203234227224323022001ULL,
		1002221454348434541222001ULL,
		1002223456569656543222001ULL,
		1020100000204020000010201ULL,
		1020102020205020202010201ULL,
		1020104040208020404010201ULL,
		1020120402306032040210201ULL,
		1020122422327232242210201ULL,
		1020302030406040302030201ULL,
		1020304050607060504030201ULL,
		1020322434528254342230201ULL,
		1020324454749474544230201ULL,
		1022121002226222001212201ULL,
		1022123024227224203212201ULL,
		1022141424528254241412201ULL,
		1022143446549456443412201ULL,
		1022323232448442323232201ULL,
		1022325254649464525232201ULL,
		1210000000024200000000121ULL,
		1210002200025200022000121ULL,
		1210004400028200044000121ULL,
		1210022220126210222200121ULL,
		1210024420147410244200121ULL,
		1210220032026202300220121ULL,
		1210222232227222322220121ULL,
		1210242254148414522420121ULL,
		1210244454369634544420121ULL,
		1212201002226222001022121ULL,
		1212203204227224023022121ULL,
		1212223242528252423222121ULL,
		1212225444549454445222121ULL,
		1212421234248424321242121ULL,
		1212423436449446343242121ULL,
		1232100000246420000012321ULL,
		1232102220247420222012321ULL,
		1232122422348432242212321ULL,
		1232124642369632464212321ULL,
		1232322032448442302232321ULL,
		1232324252649462524232321ULL,
		1234321002468642001234321ULL,
		1234323224469644223234321ULL,
		4000000000008000000000004ULL,
		4000004000009000004000004ULL
		*/};
	for (int test_num = 1; test_num <= test_cases; ++test_num) {
		cout << "Case #" << test_num << ": ";
		uint64 A, B;
		cin >> A >> B;
		auto p1 = lower_bound(v.begin(), v.end(), A);
		auto p2 = upper_bound(v.begin(), v.end(), B);
		cout << p2 - p1 << endl;
	}
	return 0;
}