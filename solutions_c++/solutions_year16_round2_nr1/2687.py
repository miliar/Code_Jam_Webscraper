#include<cstdio>
#include<string.h>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;

main()
{
    freopen("gtd.txt","w",stdout);
    int t,t2;
    char s[2005];
    scanf("%d",&t);
    int i,j;
    int sz;
    //int a[30];
    char ch;
    map<char,int>a;
    vector<int>q;
    for(t2=1;t2<=t;t2++)
    {
        scanf("%s",s);
        sz=strlen(s);
        for(ch='A';ch<='Z';ch++)
        {
            if(a[ch]!=0)
            {
                //printf("aads");
            }
            a[ch]=0;
        }
        for(i=0;i<sz;i++)
        {
            a[s[i]]++;
        }
        while(a['Z']>0&&a['E']>0&&a['R']>0&&a['O']>0)
        {
            a['Z']--;
            a['E']--;
            a['R']--;
            a['O']--;
            q.push_back(-0);
        }
        while(a['S']>0&&a['I']>0&&a['X']>0)
        {
            a['S']--;
            a['I']--;
            a['X']--;
            q.push_back(-6);
        }
        while(a['S']>0&&a['E']>1&&a['V']>0&&a['N']>0)
        {
            a['S']--;
            a['E']-=2;
            a['V']--;
            a['N']--;
            q.push_back(-7);
        }
        while(a['F']>0&&a['I']>0&&a['V']>0&&a['E']>0)
        {
            a['F']--;
            a['I']--;
            a['V']--;
            a['E']--;
            q.push_back(-5);
        }
        while(a['F']>0&&a['O']>0&&a['U']>0&&a['R']>0)
        {
            a['F']--;
            a['O']--;
            a['U']--;
            a['R']--;
            q.push_back(-4);
        }
        while(a['T']>0&&a['W']>0&&a['O']>0)
        {
            a['T']--;
            a['W']--;
            a['O']--;
            q.push_back(-2);
        }
        while(a['O']>0&&a['N']>0&&a['E']>0)
        {
            a['O']--;
            a['N']--;
            a['E']--;
            q.push_back(-1);
        }
        while(a['N']>1&&a['I']>0&&a['E']>0)
        {
            a['N']-=2;
            a['I']--;
            a['E']--;
            q.push_back(-9);
        }
        while(a['T']>0&&a['H']>0&&a['R']>0&&a['E']>1)
        {
            a['T']--;
            a['H']--;
            a['R']--;
            a['E']-=2;
            q.push_back(-3);
        }
        while(a['E']>0&&a['I']>0&&a['G']>0&&a['H']>0&&a['T']>0)
        {
            a['E']--;
            a['I']--;
            a['G']--;
            a['H']--;
            a['T']--;
            q.push_back(-8);
        }
        sort(q.begin(),q.end());
        printf("Case #%d: ",t2);
        while(!q.empty())
        {
            printf("%d",-1*q.back());
            q.pop_back();
        }
        printf("\n");
    }
}
