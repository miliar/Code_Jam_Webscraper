#include<iostream>#include<algorithm>#include<cstdio>#include<vector>#include<cstring>#include<string>#include<cstdlib>#include<math.h>#include<cctype>#include<iomanip>#include<map>#include<set>#include<stack>#include<queue>#include<cassert>#include<sstream> using namespace std; #define L long#define LL long long#define ULL unsigned long long#define D double #define LD long double//#define G getchar#define MOD (1000000007LL)#define fi first#define se second#define pb push_back#define mp make_pair#define ULL unsigned long long#define pll pair <L,L>#define INF ((1<<30)+(1<<29))   LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}LL lcm(LL a,LL b){return a*b/gcd(a,b);}LL modpow(LL n ,LL k,LL mod){LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans%mod;}LL max(LL a,LL b){return (a>b)?a:b;}LL min(LL a,LL b){return (a<b)?a:b;}LL ab(LL a){return (a>0)?a:-a;}LL poww(LL n,LL k){LL ans=1;while(k>0){if(k&1)ans*=n;k>>=1;n*=n;}return ans;}  L max(L a,L b){return (a>b)?a:b;}L min(L a,L b){return (a<b)?a:b;}L ab(L a){return (a>0)?a:-a;}//#define print(t,ans) cout<<"Case #"<<t<<": "<<fixed<<ans<<endlLL f(string A,string B){ LL i,ans=0; for(i=0;i<=A.size()-B.size();i++)  if(A.substr(i,B.size())==B)   ans++; return ans;}vector<string>V;vector<LL>A;int main(){ ios::sync_with_stdio(false); LL T,k,l,s,i,j,count,x,ans,y; string S,target,st; int tt=0; cin>>T; while(T--) {  tt++;  ans=0;  y=0;  V.clear();  A.clear();  cin>>k>>l>>s;  cin>>S;  cin>>target;  for(i=0;i<poww(k,s);i++)  {   j=i;   st="";   count=s;   while(count--)   {    x=j%k;	j/=k;	st+=S[x];   }   V.pb(st);  }  for(i=0;i<V.size();i++)  {   x=f(V[i],target);   y=max(y,x);   A.pb(x);   ans+=x;  }  ans=(y*V.size())-ans;  //print(tt,(D)((D)(ans)/(D)(V.size())));  printf("Case #%d: %0.8f\n",tt,(D)(ans)/(D)(V.size())); } return 0;}  