#include <cstdio>#include <cstring>int T, C, D, N, L;char comb[36][4];int cid[26][26];char opp[28][3];int oid[26][26];char str[101];char list[101];char tmp;int main(){	scanf("%d", &T);	for (int cas=1; cas <= T; ++cas)	{		memset(cid, -1, sizeof(cid));		scanf("%d", &C);		for (int i=0; i < C; ++i)		{			scanf("%s", comb[i]);			cid[comb[i][0] - 'A'][comb[i][1] - 'A'] = i;			cid[comb[i][1] - 'A'][comb[i][0] - 'A'] = i;		}				memset(oid, -1, sizeof(oid));		scanf("%d", &D);		for (int i=0; i < D; ++i)		{			scanf("%s", opp[i]);			oid[opp[i][0] - 'A'][opp[i][1] - 'A'] = i;			oid[opp[i][1] - 'A'][opp[i][0] - 'A'] = i;		}				scanf("%d", &N);		scanf("%s", str);		L = 0;		for (int i=0; i < N; ++i)		{			list[L++] = str[i];			if (L > 1 && cid[list[L-2] - 'A'][list[L-1] - 'A'] != -1)			{				tmp = comb[cid[list[L-2] - 'A'][list[L-1] - 'A']][2];				L -= 2;				list[L++] = tmp;			}						if (L > 1)			{				for (int j=L-2; j >= 0; --j)					if (oid[list[j] - 'A'][list[L-1] - 'A'] != -1)					{						L = 0;						break;					}			}		}				printf("Case #%d: [", cas);		for (int i=0; i < L; ++i)		{			if (i) printf(", ");			printf("%c", list[i]);		}		printf("]\n");	}	return 0;}