//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#####################################################################`,##################################//
//#####################################################################  ##################################//
//#####################################################################,  ``###############################//
//#####################################################################+   +###############################//
//#####################################################################'  `################################//
//####################################################################.  ,#################################//
//##################################################################+`  '##################################//
//##############################################################+ .    ####################################//
//#############################################################;`#.  `#####################################//
//############,    .###########,`    `,########`      '#######`:#   .######,`  `+###,`                `.###//
//###########.       ##########,      ,#######       +######, '+   :#####+       :##.                   :##//
//###########        '#########,      ,######       ######:   .   ######:         ##.                   ,##//
//##########,         #########,      ,#####       ######`      `######`          ##.                   ,##//
//##########          +########,      ,####       ######       `######`           ##,                   :##//
//#########'          `########,      ,###.      #####+       .######             ##############;       ###//
//#########     `:     ########,      ,##;      +###++       .######              ##############       ;###//
//########+     +#     .#######,      ,##      ;###;        .#####+       '       #############:       ####//
//########`     ##`     #######,      ,#`     `###.        .#####;       +#       #############       +####//
//########     .##+     ,######,      ,#      ##+         ,#####.       ###       ############       .#####//
//#######`     +###      ######,      ,#      ###        ,#####.      `####       ###########,       ######//
//#######      ####:     ;#####,      ,#      .#        ,#####,      ,#####       ##########+       '######//
//######.                 #####,      ,#       +       .######       `            ````######       `#######//
//######                  '####,      ,#'       +    ,#######+                        #####`       +#######//
//#####,                   ####,      ,##`       '  +########+                        ####'       :########//
//#####                    '###,      ,###        +###########                        ####        #########//
//####:      +#######       ###,      ,##++        `##########                        ###        +#########//
//####       ########.      +##,      ,#,  #`        `#########.                      ##;       .##########//
//###'      `########+      `##,      ,,    :;           :+#####+##########:      ######        ###########//
//###`      ##########       +#,      ,       +.               .###########:      #####`       :###########//
//###      `##########,      ,#,      ,        .#`              ###########:      #####        ############//
//##################################+       :# ++##:            ###########################################//
//##################################.       ##;+######,         ###########################################//
//##################################,      .#;:##########+:`    ###########################################//
//##################################         +#############################################################//
//#################################         ;##############################################################//
//################################    `#    ;##############################################################//
//###############################     ###   ,##############################################################//
//#############################`     '###`   ##############################################################//
//############################      `####,   '#############################################################//
//###########################       #####'    #############################################################//
//##########################       :######   ;#############################################################//
//#########################        #######+'###############################################################//
//########################        +########################################################################//
//#######################        .#########################################################################//
//######################         ##########################################################################//
//#####################`        ;##########################################################################//
//#####################`       `###########################################################################//
//######################       ############################################################################//
//#######################`    ,############################################################################//
//########################.   #############################################################################//
//#########################: ##############################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//
//#########################################################################################################//

#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <cassert>
#include <algorithm>
#include <iomanip>
#include <deque>

using namespace std;

const int INF = 1e9;

void solve()
{
	long long n, k;
	cin >> n >> k;

	vector< pair<long long, long long> > seg(2);
	seg[0] = make_pair(n, 1);

	long long sat = 0;
	while (true)
	{
		assert(seg[0].first > seg[1].first);
		if (sat + seg[0].second + seg[1].second >= k)
		{
			if (sat + seg[0].second >= k)
			{
				cout << seg[0].first - 1 - (seg[0].first - 1) / 2 << " " << (seg[0].first - 1) / 2 << endl;
			}
			else
			{
				cout << seg[1].first - 1 - (seg[1].first - 1) / 2 << " " << (seg[1].first - 1) / 2 << endl;
			}
			return;
		}
		sat += seg[0].second + seg[1].second;

		vector< pair<long long, long long> > future(2);
		if (seg[0].first % 2 != 0)
		{
			future[0].first = (seg[0].first - 1) / 2;
			future[0].second = 2 * seg[0].second;
		}
		else
		{
			future[1].first = (seg[0].first - 1) / 2;
			future[0].first = seg[0].first - 1 - future[1].first;
			future[0].second = future[1].second = seg[0].second;
		}

		if (seg[1].first > 1)
		{
			if (seg[1].first % 2 != 0)
			{
				future[1].second += seg[1].second * 2;
			}
			else
			{
				future[1].first = (seg[1].first - 1) / 2;
				future[0].second += seg[1].second;
				future[1].second += seg[1].second;
			}
		}
		else if (seg[1].first == 1)
		{
			future[1].first = 0;
		}

		seg = future;
	}

}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int t;
	cin >> t;

	for (int i = 0; i < t; i++)
	{
		cout << "Case #" << i + 1 << ": ";
		solve();
	}

	return 0;
}