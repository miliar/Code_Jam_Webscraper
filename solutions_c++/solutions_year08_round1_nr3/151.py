#include <string>
#include <iostream>
#include <sstream>
#include <vector>
#include <cmath>
#include <cctype>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <cassert>
using namespace std;

/*PREWRITTEN CODE BEGINS HERE*/
#define PB push_back
#define CS c_str()
#define SIZE(x) (int)((x).size())

#define REP(i,n) for(int i=0,_n=(n); i<_n; ++i)


typedef vector<string> VS;
VS split2(string s, char c){
  string tmp="";
  VS ret; int n = s.length(); 
  REP(i,n+1){
	if(i<n && s[i] != c) tmp += s[i];
	else if(tmp.length()>0) { ret.PB(tmp); tmp=""; }
  }
  return ret;  
}
/*PREWRITTEN CODE ENDS HERE*/
inline int RI() { int xx; scanf("%d",&xx); return xx; }
typedef long double LD;
const int INF = 1010000000;
const double EPS = 1e-9;
/*SOLUTION BEGINS HERE*/

//generated by for i in `seq 0 30`; do echo -n "\"" ; echo "scale = 30; (3 + sqrt(5))^$i" | bc ; done 

string tab[] = {
"1",
"5.236067977499789696409173668731",
"27.416407864998738178455042012384",
"143.554175279993270285093557399378",
"751.659420219964668996741176346695",
"3935.739820199814932840072828482484",
"20607.801240319030921053472265507197",
"107903.848161114925794960542279108384",
"564991.884005413431085549364612596059",
"2958335.911388020883333454018559009517",
"15490047.932306471575658526652902974898",
"81106943.948286745920617343843178156705",
"424681471.960494589221069956447437904812",
"2223661055.969820551643950363311814605580",
"11643240447.976944952979422354080611378689",
"60964798463.982387511300732671233662822457",
"319215828991.986545255886706611065147797983",
"1671435780095.989721490117308981380921875519",
"8751751364607.992147917157027443630592813865",
"45824765067263.994001542472928734195040387427",
"239941584945151.995417586209462619836286096232",
"1256350449401855.996499347365060725627361165234",
"6578336356630527.997325739352513578004199323232",
"34444616342175743.997957046654837013467587028817",
"180354352626532351.998439322518959642159032515088",
"944347650390491135.998807748494367247498349784530",
"4944668491836817407.999089200890142113359754961956",
"25890620349458939903.999304211362217078541837287336",
"135565048129406369791.999468464606625560049098537970",
"709827807378602459135.999593942158900746042983434291",
"3716706651753989275647.999689794359430266607575941633" };


void solve(void)
{
	int n;
	scanf("%d", &n);
	string s = tab[n];

	VS v = split2(s, '.');
	string x = v[0];
	
	string ret;
	if(SIZE(x) < 3) ret =  string( 3-SIZE(x), '0') + x;
	else ret = x.substr( SIZE(x)-3, 3);
	
	printf("%s\n", ret.CS);
}
int main(void)
{
	int T, C = 1;
	scanf("%d",&T) ;
	while(T--) { printf("Case #%d: ",C++); solve(); }
	return (0);
}
