#include <algorithm>
#include <iomanip>
#include <istream>
#include <map>
#include <ostream>
#include <set>
#include <sstream>
#include <utility>
#include <vector>
using namespace std;
// Solution template generated by caide


class Solution {
public:
    void solve(std::istream& in, std::ostream& out) {
        int T;
        in >> T;
        for (int test = 1; test <= T; ++test) {
            int B;
            long long N;
            in >> B >> N;
            vector<long long> M(B);
            for (long long& i : M)
                in >> i;
            long long left = -1, right = (long long)1e16;
            while (right - left > 1) {
                long long mid = (left + right) / 2;
                long long cnt = 0;
                for (long long m : M)
                    cnt += mid / m + 1;
                if (cnt < N)
                    left = mid;
                else
                    right = mid;
            }
            long long T = 0;
            for (long long m : M)
                T += (right+m-1)/m;
            int res = 0;
            for (int i = 0; i < B; ++i) {
                if (right % M[i] == 0) {
                    ++T;
                    if (T == N)
                        res = i;
                }
            }
            out << "Case #" << test << ": " << (res+1) << endl;
        }
    }
};

void solve(std::istream& in, std::ostream& out)
{
    out << std::setprecision(12);
    Solution solution;
    solution.solve(in, out);
}
#include <fstream>
#include <iostream>

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    istream& in = cin;

    ostream& out = cout;
    solve(in, out);
    return 0;
}
