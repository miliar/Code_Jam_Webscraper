#include <cstdio>
#include <algorithm>
#include <vector>

long long int T, n, k, lcm, num;
struct S{ long long v, id; } m[1010];
std::vector<S> que;
bool cmp(S a, S b)
{
    if( a.v == b.v ) return a.id < b.id;
    return a.v < b.v;
}

int main()
{
    freopen("h2.in","r",stdin);
    freopen("h5.out","w",stdout);
    scanf("%lld", &T);
    for(int t = 1 ; t <= T ; t++ )
    {
        scanf("%lld%lld", &n, &k);
        for(int i = 0 ; i < n ; i++ )
        {
            scanf("%lld", &m[i].v), m[i].id = i;
            if( i == 0 ) lcm = m[0].v;
            else lcm = (lcm/std::__gcd(lcm, m[i].v))*m[i].v;
        }
        que.resize(0);
        for(int i = 0 ; i < n ; i++)
            for(int j = 0 ; j*m[i].v < lcm ; j++ )
                que.push_back({m[i].v*j, m[i].id});
        std::sort(que.begin(), que.end(), cmp);
        printf("Case #%d: %lld\n", t, que[((k-1)%que.size())].id+1);
    }
}
/*
100
2 4
10 5
3 12
7 7 7
3 12
4 2 1
5 1000000000
25 25 25 25 25
2 2
1 1
5 5
1 1 1 1 1
5 448257424
1 2 3 4 5
5 915742169
18 7 21 11 25
5 118749724
14 14 14 14 14
5 83420247
17 17 17 17 17
5 299800145
1 1 1 1 1
5 444902848
22 22 22 22 22
5 979922545
17 17 17 17 17
5 554291606
20 20 20 20 20
5 421263431
25 25 25 25 25
5 337387210
4 4 4 4 4
5 624627753
14 14 14 14 14
5 834445533
8 8 8 8 8
5 92363953
9 9 9 9 9
5 497034353
24 24 24 24 24
5 387791066
20 20 20 20 20
5 765486278
3 3 3 3 3
5 431162853
5 5 5 5 5
5 49132090
2 2 2 2 2
5 574669648
18 18 18 18 18
5 559281449
17 17 17 17 17
5 427201454
5 5 5 5 5
5 752688939
21 21 21 21 21
5 890246068
18 18 18 18 18
5 927355112
19 19 19 19 19
5 776584083
5 5 5 5 5
5 381876442
1 1 1 1 1
5 929263782
6 6 6 6 6
5 589829764
1 2 3 4 5
5 317968865
1 2 3 4 5
5 412850828
1 2 3 4 5
5 15308838
1 2 3 4 5
5 419701684
1 2 3 4 5
5 727734908
1 2 3 4 5
5 965907248
1 2 3 4 5
5 571071791
1 2 3 4 5
5 374975465
1 2 3 4 5
5 774595347
1 2 3 4 5
5 378103897
1 2 3 4 5
5 427813367
1 2 3 4 5
5 938084903
1 2 3 4 5
5 566839829
1 2 3 4 5
5 22525135
1 2 3 4 5
5 823435816
1 2 3 4 5
5 255800793
1 2 3 4 5
5 649237678
1 2 3 4 5
5 715683582
1 2 3 4 5
5 436351653
1 2 3 4 5
5 523270107
1 2 3 4 5
5 660528704
1 2 3 4 5
5 380480249
1 2 3 4 5
5 119577045
1 2 3 4 5
5 672167564
1 2 3 4 5
5 968855131
14 5 7 3 10
5 550484837
17 13 23 22 12
5 508488226
9 18 12 8 22
5 433793573
22 4 12 4 20
5 534360586
21 2 9 3 6
5 788472219
13 12 15 8 23
5 128648636
23 15 1 13 16
5 907406541
5 8 23 7 12
5 778720356
19 6 2 12 7
5 965016257
6 9 13 4 18
5 873093910
9 4 5 18 10
5 704634951
12 15 2 9 4
5 226571268
2 25 22 5 22
5 821477457
8 16 12 11 12
5 883790409
22 4 12 3 14
5 340871531
22 24 24 18 22
5 30308903
1 7 14 4 5
5 925476858
18 19 14 7 13
5 913360076
4 1 13 20 20
5 109810313
1 18 5 22 21
5 354918375
6 7 18 17 7
5 175568273
4 10 22 13 1
5 550552593
17 12 17 25 14
5 497643650
24 9 1 9 2
5 351044108
4 15 13 3 6
5 607292493
2 6 6 19 12
5 666945448
9 14 8 1 19
5 425881186
5 2 6 13 25
5 226683685
18 19 5 21 2
5 464401115
12 13 15 1 5
5 449041162
7 10 15 13 4
5 532798588
13 5 21 6 19
5 342915557
25 2 1 10 11
5 928024126
2 5 19 23 6
5 917548395
3 10 14 13 11
5 512556091
8 17 2 1 21
5 895359185
4 21 15 5 14
5 456018052
17 10 15 20 11
5 138764854
15 5 21 25 18
5 704910497
14 6 13 25 12
5 115923559
8 10 3 2 3
5 569109654
18 11 10 5 20

*/
