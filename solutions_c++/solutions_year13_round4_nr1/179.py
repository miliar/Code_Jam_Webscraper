#include <cstdio>#include <cstdlib>#include <algorithm>using namespace std;struct PR {    long long x, y;    bool operator<(const PR &o) const {        return x < o.x || x == o.x && y > o.y;    }}a[4000], s[4000];const long long mod = 1000002013ll;long long n, m, ans, cnt;long long get(long long x) {    return (x * n - ((x * (x - 1)) >> 1)) % mod;}int main(){    freopen("1.txt", "r", stdin);    freopen("2.txt", "w", stdout);    int now, T, tot;    scanf("%d", &T);    for (int w = 1 ; w <= T ; ++w) {        ans = 0;        scanf("%lld%lld", &n, &m);        for (int i = 1; i <= m; i++) {            scanf("%lld%lld%lld", &a[i].x, &a[i + m].x, &a[i].y);            a[i + m].y = -a[i].y;            ans += get(a[i + m].x - a[i].x) * a[i].y % mod;        }        m *= 2;        sort(a + 1, a + m + 1);        tot = 0;        for (int i = 1; i <= m; i++) {            if (a[i].y > 0) s[++tot] = a[i];            else {                while (a[i].y < 0) {                    cnt = min(-a[i].y, s[tot].y);                    a[i].y += cnt, s[tot].y -= cnt;                    ans -= get(a[i].x - s[tot].x) * cnt % mod;                    if (ans < 0) ans += mod;                    if (s[tot].y == 0) tot--;                }            }        }        printf("Case #%d: %lld\n", w, ans);    }    return 0;}