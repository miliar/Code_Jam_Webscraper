#include <cstdio>#include <algorithm>using namespace std;const int maxm = 1000;const long long mod = 1000002013;int casei, cases;long long N, M, cost, rcost;int start[maxm], stop[maxm];long long pas[maxm][4];int start_cmp(int sta1, int sta2) {	return pas[sta1][0] > pas[sta2][0];}int stop_cmp(int sto1, int sto2) {	return pas[sto1][1] < pas[sto2][1];}void calc(long long len, long long cnt, long long &cost) {	long long tmp1 = (N+N+1-len) % mod;	long long tmp2 = len % mod;	tmp1 = (tmp1 * tmp2 / 2) % mod;	cost = (tmp1 * cnt + cost) % mod;}int main() {	scanf("%d", &cases);	for (casei = 1; casei <= cases; ++casei) {		scanf("%I64d%I64d", &N, &M);		cost = 0;		for (int i = 0; i < M; ++i) {			scanf("%I64d%I64d%I64d", pas[i], pas[i]+1, pas[i]+2);			pas[i][3] = pas[i][2];			calc(pas[i][1] - pas[i][0], pas[i][2], cost);		}				for (int i = 0; i < M; ++i) start[i] = i;		sort(start, start + M, start_cmp);		for (int i = 0; i < M; ++i) stop[i] = i;		sort(stop, stop + M, stop_cmp);				//printf("cost: %I64d\n", cost);				rcost = 0;		for (int i = 0; i < M; ++i) {			int now = stop[i];			int j = 0;			while (pas[now][3] > 0) {				while (pas[start[j]][2] == 0 || pas[start[j]][0] > pas[now][1]) ++j;				long long cnt = pas[now][3];				if (pas[start[j]][2] < cnt) cnt = pas[start[j]][2];								//printf("%I64d, %I64d (%I64d);\t%I64d\n", pas[start[j]][0], pas[now][1], cnt, rcost);								calc(pas[now][1] - pas[start[j]][0], cnt, rcost);				pas[now][3] -= cnt;				pas[start[j]][2] -= cnt;			}		}				rcost = (cost - rcost + mod) % mod;				printf("Case #%d: %I64d\n", casei, rcost);	}	return 0;}