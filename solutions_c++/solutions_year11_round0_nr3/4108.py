/*
100
5
1 2 3 4 5
3
3 5 6
2
5 6
2
5 5
15
677475 52153 341401 963109 701568 423743 888988 436527 612738 577386 140223 904538 870107 166891 480599
15
856656 111880 880482 787592 442761 511977 430878 551568 374354 499705 44046 729617 49909 791453 886914
8
123084 965631 753654 795782 597438 473258 533336 919055
4
596778 576103 981509 994120
3
51258 850441 799283
8
358893 204412 745775 508236 938603 221305 689179 881147
3
242888 412905 391201
10
963779 814938 198435 802793 708357 356795 707261 386259 228432 921555
6
60833 163650 781506 901045 5537 316469
6
413547 586362 21700 250619 89941 812155
9
3706 6534 707 8241 1712 3478 3825 1759 13830
4
1966 3465 9238 8588
4
5750 8842 6994 12206
10
4368 8724 3812 314 9155 8812 4055 1100 5787 8309
6
2520 5777 9019 997 3222 9057
11
1258 4607 4722 8397 9104 9743 7605 476 8914 3885 6256
5
9328 1220 925 6698 14595
11
8198 6225 9305 1199 2975 5470 9165 1210 9910 8229 10116
9
934 1018 2499 9904 8153 9742 4452 256 2739
12
3785 3980 4221 4753 5387 4585 3581 1495 4148 7825 3313 3381
14
6372 4856 8273 8898 4718 7488 6389 2044 5541 8830 5122 1058 630 15653
9
7438 1133 4557 8808 2154 197 6738 9442 7385
7
2151 4629 7765 9079 3995 4958 15253
10
3121 1974 4239 6422 1753 2288 5926 2307 804 4406
12
454 9955 5943 643 6107 6253 646 9069 8890 1615 803 9148
15
8343 5586 9154 7797 4843 8015 106 4434 5182 2722 2320 3797 5547 1538 7838
3
906 2634 2496
3
7628 5919 2771
15
5978 977 2427 3811 1692 9642 3719 693 3422 9253 1407 7546 2723 9231 9157
8
4575 4828 8449 6226 9235 5457 2097 2839
3
3028 3885 1273
8
8333 280 6757 7769 9944 5265 2135 8119
15
4798 991 4672 4778 6997 6679 2606 7351 1753 1655 654 9745 252 7556 16153
4
7216 6857 2468 3933
12
9402 3209 8955 2197 2442 7636 6869 3193 3496 5474 6187 78
5
1966 2426 2333 6720 7561
9
1257 4345 3584 8553 9090 949 6558 8371 8803
12
5509 9243 8180 9163 8191 8865 6062 6143 4262 2400 6111 16055
3
7879 8353 15974
2
2925 3520
11
7361 3027 1876 4443 5515 1929 5050 3597 3488 783 7
2
4607 2772
3
7882 8317 16055
7
7547 2411 7222 2191 3742 2773 1250
3
6252 536 6772
3
7849 5976 2545
12
5933 5606 9773 8415 6272 9881 4089 717 6099 6 7157 15156
9
5652 1118 6225 1800 1158 7736 9196 1666 12995
12
3208 1613 1649 2867 7234 4037 7636 621 2442 8508 4957 4190
12
9141 8050 4052 2870 6658 4327 5369 3439 3219 7283 2903 9556
6
2731 6849 8856 3760 6318 9452
11
6857 2133 3831 3977 125 7151 2686 8771 6488 2206 12683
3
5772 9248 12972
13
5916 56 3001 8258 6028 5614 7615 2497 3493 6022 9886 6500 3866
9
6693 6700 8425 8357 4339 4663 7077 4259 2439
10
2108 8863 2352 8395 6826 7942 4636 49 5701 668
7
6055 7705 9431 603 3606 6401 961
11
4677 6789 3293 6917 5931 1829 3235 9235 9282 5312 5924
11
4452 3216 8860 8299 1527 6570 869 6211 7838 9921 6091
5
4516 8223 498 9061 4908
13
6964 2559 6035 6971 3273 3969 7274 7901 7412 8099 191 4958 3882
7
9608 5349 9692 439 8535 186 13547
6
9279 484 1397 5452 362 1510
7
8414 7166 4923 6685 5873 2020 8979
10
5395 6562 4253 2375 4047 9499 5164 1786 2847 9846
8
5035 7282 7151 4978 4161 5327 5159 6125
11
762 7901 9697 9724 5139 7154 4372 6549 3759 2790 7985
10
3541 9585 251 6456 2893 9601 4349 3652 8665 8395
5
6347 5119 4615 4167 2420
3
7083 2481 4634
4
6494 5548 4894 4537
11
654 9426 1586 7878 794 3985 7297 2756 5110 5802 8506
14
4259 8989 2856 6093 3936 1048 9117 7910 3769 3075 7646 4737 7072 3869
3
4277 2451 6438
13
1597 1579 5435 982 2251 2892 3326 1158 5640 1895 376 403 5966
15
8263 3831 8813 3972 7149 1855 7535 1147 9165 3771 7000 8134 5547 5805 5258
13
676 4740 2752 1368 286 4052 5479 5602 3177 6112 3674 5539 4487
7
5877 2396 629 169 9197 710 15454
10
970 7926 7747 56 4077 1209 8173 5656 6059 5709
3
4709 4566 947
5
957 2721 4479 4410 2393
4
8610 136 693 9119
6
1785 6398 9680 6073 5555 7999
4
4935 9930 4665 10164
9
5711 7179 438 5181 5919 6558 443 956 4937
3
3697 9226 8966
8
758 64 2807 7624 2633 5648 8874 11130
10
8485 269 6058 4635 40 1618 6315 4258 2132 9150
5
360 419 8308 5981 14306
12
4722 8393 4729 6725 3111 3744 3913 3329 4802 6194 4373 8621
14
2382 8707 8615 8497 7422 2132 7153 7539 944 6767 2761 7988 94 13711
13
9991 2855 1111 523 4320 9608 492 4524 265 7832 6109 1441 697
5
1743 2565 526 9053 1246
13
5621 5838 7171 646 6086 1032 2902 5567 1031 7045 6241 3558 6812
7
4722 4772 8643 6187 7737 9091 8995
9
9885 6331 9053 7174 8509 1340 75 1161 8638
*/ 
#include<cstdio>
#include<iostream>
#include<math.h>
using namespace std;
int a[1001],a1[1001],q[1001];
int n,z,ans,xz,ans1;
int add(int x1,int x2){
    memset(a1,0,sizeof a1);
    int p1,p2,pp;
    pp=1;
    p1=p2=0;
    while (x1!=0){
          a1[++p1]=x1%2;
          x1=x1/2;
    }
    while (x2!=0){
          a1[++p2]+=x2%2;
          a1[p2]=a1[p2]%2;
          x2=x2/2;
    }
    int x=0;
    //printf("%d\n",max(p1,p2));
    for (int i=1;i<=max(p1,p2);i++){
        x+=a1[i]*pp;
        pp=pp*2;
    }
    return x;
}

void work(){
     int x1=0,x11=0;
     int x2=0,x22=0;
     for (int i=1;i<=n;i++){
         if (q[i]==1) {x1=add(x1,a[i]);x11+=a[i];}
         if (q[i]==2) {x2=add(x2,a[i]);x22+=a[i];}
     }
     if (x1==x2 && x1!=0) {
                 ans=max(x22,ans);
                 ans=max(ans,x11);
     }
}

void dfs(int dep){
     if (dep>n) work();
     else{
          for (int i=1;i<=2;i++){
              q[dep]=i;
              dfs(dep+1);
          }
     }
}

int main(){
    //freopen("ffffff.out","w",stdout);
    scanf("%d",&z);
    while (z--){
          scanf("%d",&n);
          ans=0;ans1=2147483647;
          for (int i=1;i<=n;i++) scanf("%d",&a[i]);
          dfs(1);
          xz++;
          printf("Case #%d: ",xz);
          if (ans) printf("%d\n",ans);
          else printf("NO\n");
    }
    //while (1);
}
