#include<iostream>#include<string.h>#include<algorithm>using namespace std;const int MAX=1100;int cx[MAX],cy[MAX];int sx[MAX],sy[MAX];int g[MAX][MAX];double ken[MAX];double naomi[MAX];int n,m;int dfs(int k){    cx[k]=1;    for(int i=1;i<=m;++i)    {        if(g[k][i]!=-1&&cy[i]==-1)        {            cy[i]=1;            if(sy[i]==-1||dfs(sy[i]))            {                sy[i]=k;                sx[k]=i;                return 1;            }        }    }    return 0;}int main(){  //  freopen("in.txt","r",stdin);    int T;    int ca=0;    scanf("%d",&T);    while(T--)    {        scanf("%d",&n);        m = n;        for(int i=1;i<=n;i++)          scanf("%lf",&naomi[i]);        for(int i=1;i<=n;i++)          scanf("%lf",&ken[i]);        int ans=0;        memset(sx,-1,sizeof(sx));        memset(sy,-1,sizeof(sy));        memset(g,-1,sizeof(g));        for(int i=1;i<=n;++i)        {            for(int j=1;j<=n;j++) if(naomi[i]>ken[j])            {                g[i][j]=1;                if(sx[i]==-1&&sy[j]==-1)                {                    sx[i]=j;                    sy[j]=i;                    ++ans;                }            }        }        for(int i=1;i<=n;++i)        {            if(sx[i]==-1)            {                memset(cx,-1,sizeof(cx));                memset(cy,-1,sizeof(cy));                ans+=dfs(i);            }        }        int res = 0;        sort(ken+1,ken+n+1);        sort(naomi+1,naomi+n+1);        for(int i=1;i<=n;i++)        {          int j;          for(j=1;j<=n;j++) if(ken[j]>naomi[i])            break;          if(j<=n)          {            res++;            ken[j]=-1.0;          }        }        printf("Case #%d: %d %d\n",++ca,ans,n-res);    }    return 0;}