#include<map>#include<iomanip>#include<iostream>#include<algorithm>#include<cstdio>#include<vector>#include<cstring>#include<string>#include<math.h>#include<sstream>#include<cctype>#include<set>#include<queue>#include<stack>#include<ctime>#include<cstdlib>#include<cassert>#include<utility>#include<complex>#include<bitset>using namespace std;#define L long#define LL long long//#define ULL unsigned long long//#define D double//#define LD long double#define f first#define s second//#define x first//#define y second//#define G getchar_unlocked#define mp make_pair#define pb push_back#define INF (1<<30)#define MOD 1000000007inline LL max(LL a,LL b){return (a>b)?a:b;}inline int min(int a,int b){return (a<b)?a:b;}LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}inline LL ab(LL a){return (a>0)?a:-a;}LL lcm(LL a,LL b){return (a*b)/gcd(max(a,b),min(a,b));}LL modpow(LL n,LL k,LL mod){LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans;}LL poww(LL n ,LL k){LL ans=1;while(k>0){if(k&1)ans=(ans*n);k>>=1;n=(n*n);}return ans;}//double min(double a,double b){return (a<b)?a:b;}//double max(double a,double b){return (a>b)?a:b;}//double ab(double x){return (x>=0.0)?x:-x;}int myrandom(int i){return rand()%i;}int main(){	ios::sync_with_stdio(false);	LL T,tt=0,n,i,mul,m,count;	LL F[15]={};	cin>>T;	while(T--)	{		tt++;		cout<<"Case #"<<tt<<": ";		cin>>n;		if(n==0)		{			cout<<"INSOMNIA"<<endl;			continue;		}		for(i=0;i<10;i++)			F[i]=0;		count=0;		mul=1;		m=n;		while(m)		{			F[m%10]=1;			m/=10;		}		for(i=0;i<10;i++)			count+=F[i];		while(count!=10)		{			mul++;			m=mul*n;			while(m)			{				F[m%10]=1;				m/=10;			}			count=0;			for(i=0;i<10;i++)				count+=F[i];		}		cout<<mul*n<<endl;	}	return 0;}