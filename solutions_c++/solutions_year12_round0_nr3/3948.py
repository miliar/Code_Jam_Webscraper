#include <stdio.h>
#include <algorithm>
#include <vector>
#include <iostream>
#include <string>
#include <string.h>
#include <cstdlib>

using namespace std;

typedef long long int64;

int a, b;

int64 qty_pair(int n) {
    int64 res = 0;
    int num1[10], num2[10], k = 0, tmp = n;
    while (tmp) {
        num1[k++] = tmp % 10;
        tmp /= 10;
    }
    for (int i = 0, j = k-1; j >= 0; ++i, --j)
        num2[i] = num1[j];
    
    for (int i = 1; i < k; ++i) {
        int m = 0;
        for (int j = 0; j < k; ++j) {
            m += num2[(i+j)%k];
            m *= 10;
        }
        
        m /= 10;
        if (m == n) break;
        if (m <= b && m > n)
            ++res;
    }
    
    return res;
}

int main() {
    freopen("C-large.in", "r", stdin);
    freopen("c-large.out", "w", stdout);
    int t;
    scanf("%d", &t);
    int Case = t;
    while (t--) {
        scanf("%d%d", &a, &b);
        int64 ans = 0;
        for (int i = a; i <= b; ++i)
            ans += qty_pair(i);
        
        printf("Case #%d: %lld\n", Case-t, ans);
    }
    return 0;
}
/*
4
1 9
10 40
100 500
1111 2222
50
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000
1000000 2000000

1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
1 2000000
*/