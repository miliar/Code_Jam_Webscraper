#include<iostream>

int main(){
  const char* s1 = R"foo(1000000000000001 3 2 5 2 7 2 3 2 7
1000000000000101 13 11 3 4751 173 3 53 109 3
1000000000001001 73 5 3 19 19 3 5 19 3
1000000100000001 5 19 3 281 71 3 17 691399 3
1000100000000001 37 5 3 43 107 3 5 11 3
1001000000000001 5 11 3 19 17 3 313 19 3
1000000000000111 3 2 5 2 7 2 3 2 11
1000000000001101 3 2 5 2 7 2 3 2 11
1000000000010011 3 2 5 2 7 2 3 2 7
1000000000011001 3 2 5 2 7 2 3 2 11
1000000000100101 3 2 5 2 7 2 3 2 7
1000000000110001 3 2 5 2 7 2 3 2 11
1000000001000011 3 2 5 2 7 2 3 2 11
1000000001001001 3 2 5 2 7 2 3 2 7
1000000001100001 3 2 5 2 7 2 3 2 11
1000000010000011 167 2 11 2 58427 2 23 2 839
1000000010000101 3 2 5 2 7 2 3 2 11
1000000010001001 5 2 7 2 1933 2 29 2 157
1000000010010001 3 2 5 2 7 2 3 2 7
1000000011000001 3 2 5 2 7 2 3 2 11
1000000100000011 3 2 5 2 7 2 3 2 11
1000000100001001 3 2 5 2 7 2 3 2 11
1000000100010001 19 2 733 2 231613 2 5 2 16661
1000000100100001 3 2 5 2 7 2 3 2 7
1000000110000001 3 2 5 2 7 2 3 2 11
1000001000000011 83 2 7 2 19 2 387503 2 20161
1000001000000101 3 2 5 2 7 2 3 2 11
1000001000010001 3 2 5 2 7 2 3 2 11
1000001001000001 3 2 5 2 7 2 3 2 7
1000001100000001 3 2 5 2 7 2 3 2 11
1000010000000011 3 2 5 2 7 2 3 2 7
1000010000001001 3 2 5 2 7 2 3 2 11
1000010000100001 3 2 5 2 7 2 3 2 11
1000010010000001 3 2 5 2 7 2 3 2 7
1000010100000001 79 2 89 2 349 2 107 2 359
1000011000000001 3 2 5 2 7 2 3 2 11
1000100000000101 3 2 5 2 7 2 3 2 7
1000100000001001 5 2 23 2 29 2 4951 2 43
1000100000010001 3 2 5 2 7 2 3 2 11
1000100001000001 3 2 5 2 7 2 3 2 11
1000100100000001 3 2 5 2 7 2 3 2 7
1000101000000001 7 2 59 2 73 2 137 2 1163
1000110000000001 3 2 5 2 7 2 3 2 11
1001000000000011 3 2 5 2 7 2 3 2 11
1001000000001001 3 2 5 2 7 2 3 2 7
1001000000010001 13 2 7 2 23 2 5 2 503
1001000000100001 3 2 5 2 7 2 3 2 11
1001000010000001 3 2 5 2 7 2 3 2 11
1001000100000001 7 2 29153 2 13 2 5 2 7187
1001001000000001 3 2 5 2 7 2 3 2 7
)foo";

  std::cout << "Case #1:" << '\n';
  std::cout << s1;
}

// #include<iostream>
// #include<string>
// #include<vector>
// #include<algorithm>

// std::vector<long long unsigned> check(std::string s){
//   std::vector<long long unsigned> r {};
//   for(unsigned b {2}; b<=10; ++b){
//     long long unsigned n {static_cast<long long unsigned>(std::stoll(s, 0, b))};
//     bool ok {false};
//     for(long long unsigned d {2}; d*d<=n; ++d){
//       if(n%d==0){
// 	ok = true;
// 	r.push_back(d);
// 	break;
//       }
//     }
//     if(!ok)
//       return {};
//   }
//   return r;
// }

// int main(){
//   unsigned n {16};
//   unsigned j {50};
//   for(unsigned i {0}; i<=n-2; ++i){
//     std::string s(n-2-i, '0');
//     s += std::string(i, '1');
//     do{
//       if(j==0)
// 	return 0;
//       std::vector<long long unsigned> v {check("1"+s+"1")};
//       if(v.size()){
// 	--j;
// 	std::cout << "1"+s+"1";
// 	for(auto d: v)
// 	  std::cout << ' ' << d;
// 	std::cout << '\n';
//       }
//     }while(std::next_permutation(s.begin(), s.end()));
//   }
// }
