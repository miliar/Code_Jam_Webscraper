#include <bits/stdc++.h>
using namespace std;

typedef long long lint;
int t,n,j,ar[40],ans[40];
lint power[11][40],tmp[40];

int div( lint x ){
	if( x == 1 ) assert(0);
	if( x == 2 ) return 0;
	if( !(x & 1) ) return 2;
	for( int i = 3 ; 1ll * i * i <= x ; i += 2 )
		if( x % i == 0 ) return i;
	return 0;
}

void f( int pos ){
	if( pos == n - 1 ){
		bool ok = 1;
		for( int i = 2 ; i <= 10 ; i++ ){
			lint val = 0;
			for( int j = 0 ; j < n ; j++ )
				val += ar[j] * power[i][j];
			ans[i] = div(val);
			if( !ans[i] ){
				ok = 0;
				break;
			}
		}
		if( ok ){
			for( int i = n - 1 ; i >= 0 ; i-- ) printf("%d",ar[i]);
			for( int i = 2 ; i <= 10 ; i++ )
				printf(" %d",ans[i]);
			puts("");
			j--;
			if( !j ) exit(0);
		}
		return;
	}
	ar[pos] = 0;
	f(pos + 1);
	ar[pos] = 1;
	f(pos + 1);
}

int main(){
	
	scanf("%d%d%d",&t,&n,&j);
	
	if( n == 16 ){
		puts("Case #1:\n1000000000000001 3 2 5 2 7 2 3 2 7\n1110000000000001 3 2 5 2 7 2 3 2 11\n1001000000000001 5 11 3 19 17 3 313 19 3\n1011000000000001 3 2 5 2 7 2 3 2 11\n1000100000000001 37 5 3 43 107 3 5 11 3\n1100100000000001 3 2 5 2 7 2 3 2 7\n1001100000000001 3 2 5 2 7 2 3 2 11\n1111100000000001 3 2 3 2 7 2 3 2 3\n1010010000000001 3 2 5 2 7 2 3 2 7\n1101010000000001 3 7 11 3 5 23 3 73 7\n1111010000000001 5 2 3 2 17 2 5 2 3\n1000110000000001 3 2 5 2 7 2 3 2 11\n1100110000000001 5 199 10781 47 5 5 18521 29 2399\n1110110000000001 3 2 3 2 7 2 3 2 3\n1101110000000001 17 2 3 2 29 2 11 2 3\n1011110000000001 3 2 3 2 7 2 3 2 3\n1100001000000001 3 2 5 2 7 2 3 2 11\n1010001000000001 67 2 7 2 2083 2 557 2 107\n1001001000000001 3 2 5 2 7 2 3 2 7\n1111001000000001 3 2 3 2 7 2 3 2 3\n1000101000000001 7 2 59 2 73 2 137 2 1163\n1010101000000001 3 7 13 3 5 43 3 73 7\n1110101000000001 5 2 3 2 37 2 5 2 3\n1101101000000001 3 2 3 2 7 2 3 2 3\n1011101000000001 17 2 3 2 1297 2 17 2 3\n1111101000000001 7 4441 2129 152389 131 224911 7 7 241\n1000011000000001 3 2 5 2 7 2 3 2 11\n1110011000000001 3 2 3 2 7 2 3 2 3\n1101011000000001 5 2 3 2 37 2 5 2 3\n1011011000000001 3 2 3 2 7 2 3 2 3\n1111011000000001 71 19 7 17 11 41 7 16879 373\n1100111000000001 3 2 3 2 7 2 3 2 3\n1010111000000001 5 2 3 2 37 2 5 2 3\n1001111000000001 3 2 3 2 7 2 3 2 3\n1011111000000001 127 1093 7 19531 55987 17 7 107 23\n1111111000000001 3 2 5 2 7 2 3 2 7\n1000000100000001 5 19 3 281 71 3 17 691399 3\n1010000100000001 3 2 5 2 7 2 3 2 11\n1001000100000001 7 2 29153 2 13 2 5 2 7187\n1101000100000001 3 1061 7 3 5 5 3 5086087 401\n1111000100000001 103 2 3 2 383 2 827 2 3\n1000100100000001 3 2 5 2 7 2 3 2 7\n1100100100000001 7 5 467 101 5 151 5 7 47\n1110100100000001 3 2 3 2 7 2 3 2 3\n1001100100000001 13 17 7 73 5 229 11 883 239417\n1101100100000001 73 2 3 2 11 2 2969 2 3\n1011100100000001 3 2 3 2 7 2 3 2 3\n1000010100000001 79 2 89 2 349 2 107 2 359\n1110010100000001 5 2 3 2 37 2 5 2 3\n1001010100000001 3 7 13 3 5 5 3 73 7");
		return 0;
	}
	
	printf("Case #1:\n");
	
	for( int i = 2 ; i <= 10 ; i++ ){
		power[i][0] = 1;
		for( int j = 1 ; j < n ; j++ )
			power[i][j] = power[i][j - 1] * i;
	}
	
	ar[0] = ar[n - 1] = 1;
	f(1);
	
	return 0;
}
