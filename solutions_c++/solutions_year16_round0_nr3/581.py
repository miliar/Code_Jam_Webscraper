#include <bits/stdc++.h>
using namespace std;

int n = 32, m = 500;
set<long long> used;

int main() {
    vector<int> primes = {2, 3, 5, 7, 11, 13, 17, 19, 
    23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 
    79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 
    137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 
    191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 
    241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 
    307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 
    367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 
    431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 
    487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 
    563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 
    617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 
    677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 
    751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 
    823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 
    883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 
    967, 971, 977, 983, 991, 997};

    cout << "Case #1:\n";
    while (m > 0) {
        long long cur = rand() % (1LL << n);
        cur |= 1;
        cur |= 1LL << (n - 1);
        if (used.count(cur) > 0) {
            continue;
        }
        used.insert(cur);

        vector<int> proof;
        for (int b = 2; b <= 10; b++) {
            for (int p : primes) {
                int rem = 0, val = 1;
                for (int i = 0; i < n; i++) {
                    if ((cur >> i) & 1) {
                        rem = (rem + val) % p;
                    }
                    val = val * b % p;
                }
                if (rem == 0) {
                    proof.push_back(p);
                    break;
                }
            }
        }
        if (proof.size() < 9) {
            continue;
        }

        for (int i = n - 1; i >= 0; i--) {
            cout << ((cur >> i) & 1);
        }
        for (int p : proof) {
            cout << ' ' << p;
        }
        cout << '\n';
        --m;
    }
    return 0;
}
