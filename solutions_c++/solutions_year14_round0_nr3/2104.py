#include <cstdio>
#include <iostream>
#include <cassert>
#include <ctime>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <string>
#include <vector>
#include <set>

using namespace std;

typedef long long int int64;
typedef long double ext;

#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#ifdef LOCALD
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#else
#define eprintf(...) {}
#endif

const int answers[5][5][25] = {
  {
    {
      0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,7,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    }
  },
  {
    {
      0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,-1,9,-1,-1,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,-1,17,-1,51,-1,-1,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,-1,33,-1,99,-1,231,-1,-1,511,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    }
  },
  {
    {
      0,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,-1,3,-1,-1,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,-1,7,-1,79,-1,-1,255,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,273,15,-1,287,-1,831,-1,-1,2047,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,7,1059,31,3171,1087,-1,3199,-1,7423,-1,-1,16383,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    }
  },
  {
    {
      0,1,3,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,-1,3,-1,15,-1,-1,127,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,9,7,15,-1,63,-1,639,-1,-1,2047,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,19,15,31,63,4383,255,-1,4607,-1,13311,-1,-1,32767,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,7,39,31,63,127,255,33919,1023,101503,34815,-1,102399,-1,237567,-1,-1,524287,-1,-1,-1,-1,-1
    }
  },
  {
    {
      0,1,3,7,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,-1,3,-1,15,-1,63,-1,-1,511,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,9,7,15,79,63,127,-1,511,-1,5119,-1,-1,16383,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
    },
    {
      0,1,3,19,15,31,63,319,255,511,1023,70143,4095,-1,73727,-1,212991,-1,-1,524287,-1,-1,-1,-1,-1
    },
    {
      0,1,3,7,39,31,63,127,255,1279,1023,2047,4095,8191,1085439,32767,3248127,1114111,-1,3276799,-1,7602175,-1,-1,16777215
    }
  }
};

const int pts[5][5][25] = {
  {
    {
      0,0,0,17,0,1,0,17,0,2,2,25,0,2,3,3,0,25,0,2,3,4,4,17,0
    },
    {
      0,1,0,17,0,2,2,25,0,2,3,3,0,25,0,2,3,4,4,17,0,1,0,25,0
    },
    {
      0,2,2,25,0,2,3,3,0,25,0,2,3,4,4,17,0,1,0,25,0,0,0,3,0
    },
    {
      0,2,3,3,0,25,0,2,3,4,4,17,0,1,0,25,0,0,0,3,0,33,0,0,2
    },
    {
      0,2,3,4,4,17,0,1,0,25,0,0,0,3,0,33,0,0,2,0,0,5,0,41,0
    }
  },
  {
    {
      0,1,0,25,0,0,0,3,0,33,0,0,2,0,0,5,0,41,0,0,2,0,3,0,0
    },
    {
      0,0,0,3,0,33,0,0,2,0,0,5,0,41,0,0,2,0,3,0,0,7,0,49,0
    },
    {
      0,0,2,0,0,5,0,41,0,0,2,0,3,0,0,7,0,49,0,0,2,0,3,0,4
    },
    {
      0,0,2,0,3,0,0,7,0,49,0,0,2,0,3,0,4,0,0,9,0,17,0,2,2
    },
    {
      0,0,2,0,3,0,4,0,0,9,0,17,0,2,2,33,0,0,4,0,0,5,0,41,0
    }
  },
  {
    {
      0,2,2,33,0,0,4,0,0,5,0,41,0,2,0,6,0,8,0,0,8,57,0,2,3
    },
    {
      0,0,4,0,0,5,0,41,0,2,0,6,0,8,0,0,8,57,0,2,3,2,8,0,10
    },
    {
      0,2,0,6,0,8,0,0,8,57,0,2,3,2,8,0,10,0,11,0,0,11,0,65,0
    },
    {
      0,2,3,2,8,0,10,0,11,0,0,11,0,65,0,2,3,4,3,10,3,12,0,13,0
    },
    {
      0,2,3,4,3,10,3,12,0,13,0,14,0,0,14,25,0,2,3,3,0,41,0,0,4
    }
  },
  {
    {
      0,2,3,3,0,41,0,0,4,0,6,0,0,7,0,57,0,2,2,6,8,0,9,0,11
    },
    {
      0,0,4,0,6,0,0,7,0,57,0,2,2,6,8,0,9,0,11,0,0,11,0,73,0
    },
    {
      0,2,2,6,8,0,9,0,11,0,0,11,0,73,0,2,3,3,8,10,11,10,12,0,14
    },
    {
      0,2,3,3,8,10,11,10,12,0,14,0,15,0,0,15,0,89,0,2,3,4,4,10,12
    },
    {
      0,2,3,4,4,10,12,13,14,13,15,13,17,0,18,0,19,0,0,19,0,25,0,2,3
    }
  },
  {
    {
      0,2,3,4,4,49,0,0,4,0,6,0,8,0,0,9,0,65,0,2,2,6,8,8,9
    },
    {
      0,0,4,0,6,0,8,0,0,9,0,65,0,2,2,6,8,8,9,11,0,12,0,14,0
    },
    {
      0,2,2,6,8,8,9,11,0,12,0,14,0,0,14,89,0,2,3,3,8,10,11,11,12
    },
    {
      0,2,3,3,8,10,11,11,12,14,15,14,16,0,18,0,19,0,0,19,0,105,0,2,3
    },
    {
      0,2,3,4,4,10,12,13,14,14,15,17,18,19,18,20,18,22,0,23,0,24,0,0,24
    }
  }
};


int T;
int r, c, m;

int main() {
  assert(scanf("%d", &T) == 1);
  for (int test = 1; test <= T; test++) {
    printf("Case #%d:\n", test);
    assert(scanf("%d %d %d", &r, &c, &m) == 3);
    int ans = answers[r - 1][c - 1][m];
    if (ans == -1) {
      printf("Impossible\n");
      continue;
    }
    int pt = pts[r - 1][c - 1][m];
    for (int i = 0; i < r; i++) {
      for (int j = 0; j < c; j++) {
        int num = i * c  + j; 
        if (num == pt)
          printf("c");
        else {
          printf("%c", ".*"[((1 << num) & ans) != 0]);
        }
      }
      printf("\n");
    }    
  }
  return 0;
}