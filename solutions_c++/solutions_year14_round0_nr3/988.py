#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <algorithm>
#include <iostream>
#include <string>
using namespace std;

int a[7][7],R,C,M,ok;
int op[8][2] = {{-1,-1},{-1,0},{-1,1},{0,-1},{0,1},{1,-1},{1,0},{1,1}};
int has[7][7][30];
string ans[7][7][30][7];

bool get(){
	int aa[7][7];
	for(int i=0;i<R;i++)
		for(int j=0;j<C;j++)
			aa[i][j] = a[i][j];
	if(M == R*C-1)	return true;
	for(int i=0;i<R;i++)
		for(int j=0;j<C;j++)
			if(aa[i][j]==0)
				for(int k=0;k<8;k++){
					int nx = i+op[k][0];
					int ny = j+op[k][1];
					if(nx>=0 && nx<R && ny>=0 && ny<C && aa[nx][ny]==-1)
						aa[i][j]++;
				}
	int zero = 0;
	for(int i=0;i<R;i++)
		for(int j=0;j<C;j++)
			if(aa[i][j]>0){
				int ook = 0;
				for(int k=0;k<8;k++){
					int nx = i+op[k][0];
					int ny = j+op[k][1];
					if(nx>=0 && nx<R && ny>=0 && ny<C && aa[nx][ny]==0)
						ook = 1;
				}
				if(ook==0)	return false;
			}else if(aa[i][j]==0)	zero++;
	if(zero==1)	return true;
	for(int i=0;i<R;i++)
		for(int j=0;j<C;j++)
			if(aa[i][j]==0){
				int ook = 0;
				for(int k=0;k<8;k++){
					int nx = i+op[k][0];
					int ny = j+op[k][1];
					if(nx>=0 && nx<R && ny>=0 && ny<C && aa[nx][ny]==0)
						ook = 1;
				}
				if(ook==0)	return false;
			}
	return true;
}
void dfs(int x,int y,int lv){
	//printf("%d %d %d\n",x,y,lv);
	if(ok==1)	return;
	if(lv==M){
		if(get()){
			ok = 1;
			printf("has[%d][%d][%d] = 1;\n",R,C,M);
			int gg = 0;
			for(int i=0;i<R;i++){
				printf("ans[%d][%d][%d][%d] = \"",R,C,M,i);
				for(int j=0;j<C;j++){
					if(a[i][j]==0){	
						if(gg==0)	printf("c");
						else printf(".");
						gg = 1;
					}
					else if(a[i][j]==-1)	printf("*");
				}
				printf("\";\n");
			}
			return;
		}
	}
	if(y==C)	y = 0, x++;
	if(x==R)	return;
	dfs(x,y+1,lv);
	a[x][y] = -1;
	dfs(x,y+1,lv+1);
	a[x][y] = 0;
}
void make(){
	for(R=1;R<=5;R++)
		for(C=1;C<=5;C++)
			for(M=0;M<R*C;M++){
				memset(a,0,sizeof(a));
				ok = 0;
				//printf("%d %d %d\n",R,C,M);
				dfs(0,0,0);
			}
}
void make2(){
memset(has,0,sizeof(has));
	has[1][1][0] = 1;
ans[1][1][0][0] = "c";
has[1][2][0] = 1;
ans[1][2][0][0] = "c.";
has[1][2][1] = 1;
ans[1][2][1][0] = "c*";
has[1][3][0] = 1;
ans[1][3][0][0] = "c..";
has[1][3][1] = 1;
ans[1][3][1][0] = "c.*";
has[1][3][2] = 1;
ans[1][3][2][0] = "c**";
has[1][4][0] = 1;
ans[1][4][0][0] = "c...";
has[1][4][1] = 1;
ans[1][4][1][0] = "c..*";
has[1][4][2] = 1;
ans[1][4][2][0] = "c.**";
has[1][4][3] = 1;
ans[1][4][3][0] = "c***";
has[1][5][0] = 1;
ans[1][5][0][0] = "c....";
has[1][5][1] = 1;
ans[1][5][1][0] = "c...*";
has[1][5][2] = 1;
ans[1][5][2][0] = "c..**";
has[1][5][3] = 1;
ans[1][5][3][0] = "c.***";
has[1][5][4] = 1;
ans[1][5][4][0] = "c****";
has[2][1][0] = 1;
ans[2][1][0][0] = "c";
ans[2][1][0][1] = ".";
has[2][1][1] = 1;
ans[2][1][1][0] = "c";
ans[2][1][1][1] = "*";
has[2][2][0] = 1;
ans[2][2][0][0] = "c.";
ans[2][2][0][1] = "..";
has[2][2][3] = 1;
ans[2][2][3][0] = "c*";
ans[2][2][3][1] = "**";
has[2][3][0] = 1;
ans[2][3][0][0] = "c..";
ans[2][3][0][1] = "...";
has[2][3][2] = 1;
ans[2][3][2][0] = "c.*";
ans[2][3][2][1] = "..*";
has[2][3][5] = 1;
ans[2][3][5][0] = "c**";
ans[2][3][5][1] = "***";
has[2][4][0] = 1;
ans[2][4][0][0] = "c...";
ans[2][4][0][1] = "....";
has[2][4][2] = 1;
ans[2][4][2][0] = "c..*";
ans[2][4][2][1] = "...*";
has[2][4][4] = 1;
ans[2][4][4][0] = "c.**";
ans[2][4][4][1] = "..**";
has[2][4][7] = 1;
ans[2][4][7][0] = "c***";
ans[2][4][7][1] = "****";
has[2][5][0] = 1;
ans[2][5][0][0] = "c....";
ans[2][5][0][1] = ".....";
has[2][5][2] = 1;
ans[2][5][2][0] = "c...*";
ans[2][5][2][1] = "....*";
has[2][5][4] = 1;
ans[2][5][4][0] = "c..**";
ans[2][5][4][1] = "...**";
has[2][5][6] = 1;
ans[2][5][6][0] = "c.***";
ans[2][5][6][1] = "..***";
has[2][5][9] = 1;
ans[2][5][9][0] = "c****";
ans[2][5][9][1] = "*****";
has[3][1][0] = 1;
ans[3][1][0][0] = "c";
ans[3][1][0][1] = ".";
ans[3][1][0][2] = ".";
has[3][1][1] = 1;
ans[3][1][1][0] = "c";
ans[3][1][1][1] = ".";
ans[3][1][1][2] = "*";
has[3][1][2] = 1;
ans[3][1][2][0] = "c";
ans[3][1][2][1] = "*";
ans[3][1][2][2] = "*";
has[3][2][0] = 1;
ans[3][2][0][0] = "c.";
ans[3][2][0][1] = "..";
ans[3][2][0][2] = "..";
has[3][2][2] = 1;
ans[3][2][2][0] = "c.";
ans[3][2][2][1] = "..";
ans[3][2][2][2] = "**";
has[3][2][5] = 1;
ans[3][2][5][0] = "c*";
ans[3][2][5][1] = "**";
ans[3][2][5][2] = "**";
has[3][3][0] = 1;
ans[3][3][0][0] = "c..";
ans[3][3][0][1] = "...";
ans[3][3][0][2] = "...";
has[3][3][1] = 1;
ans[3][3][1][0] = "c..";
ans[3][3][1][1] = "...";
ans[3][3][1][2] = "..*";
has[3][3][3] = 1;
ans[3][3][3][0] = "c..";
ans[3][3][3][1] = "...";
ans[3][3][3][2] = "***";
has[3][3][5] = 1;
ans[3][3][5][0] = "c.*";
ans[3][3][5][1] = "..*";
ans[3][3][5][2] = "***";
has[3][3][8] = 1;
ans[3][3][8][0] = "c**";
ans[3][3][8][1] = "***";
ans[3][3][8][2] = "***";
has[3][4][0] = 1;
ans[3][4][0][0] = "c...";
ans[3][4][0][1] = "....";
ans[3][4][0][2] = "....";
has[3][4][1] = 1;
ans[3][4][1][0] = "c...";
ans[3][4][1][1] = "....";
ans[3][4][1][2] = "...*";
has[3][4][2] = 1;
ans[3][4][2][0] = "c...";
ans[3][4][2][1] = "....";
ans[3][4][2][2] = "..**";
has[3][4][3] = 1;
ans[3][4][3][0] = "c..*";
ans[3][4][3][1] = "...*";
ans[3][4][3][2] = "...*";
has[3][4][4] = 1;
ans[3][4][4][0] = "c...";
ans[3][4][4][1] = "....";
ans[3][4][4][2] = "****";
has[3][4][6] = 1;
ans[3][4][6][0] = "c..*";
ans[3][4][6][1] = "...*";
ans[3][4][6][2] = "****";
has[3][4][8] = 1;
ans[3][4][8][0] = "c.**";
ans[3][4][8][1] = "..**";
ans[3][4][8][2] = "****";
has[3][4][11] = 1;
ans[3][4][11][0] = "c***";
ans[3][4][11][1] = "****";
ans[3][4][11][2] = "****";
has[3][5][0] = 1;
ans[3][5][0][0] = "c....";
ans[3][5][0][1] = ".....";
ans[3][5][0][2] = ".....";
has[3][5][1] = 1;
ans[3][5][1][0] = "c....";
ans[3][5][1][1] = ".....";
ans[3][5][1][2] = "....*";
has[3][5][2] = 1;
ans[3][5][2][0] = "c....";
ans[3][5][2][1] = ".....";
ans[3][5][2][2] = "...**";
has[3][5][3] = 1;
ans[3][5][3][0] = "c....";
ans[3][5][3][1] = ".....";
ans[3][5][3][2] = "..***";
has[3][5][4] = 1;
ans[3][5][4][0] = "c...*";
ans[3][5][4][1] = "....*";
ans[3][5][4][2] = "...**";
has[3][5][5] = 1;
ans[3][5][5][0] = "c....";
ans[3][5][5][1] = ".....";
ans[3][5][5][2] = "*****";
has[3][5][6] = 1;
ans[3][5][6][0] = "c..**";
ans[3][5][6][1] = "...**";
ans[3][5][6][2] = "...**";
has[3][5][7] = 1;
ans[3][5][7][0] = "c...*";
ans[3][5][7][1] = "....*";
ans[3][5][7][2] = "*****";
has[3][5][9] = 1;
ans[3][5][9][0] = "c..**";
ans[3][5][9][1] = "...**";
ans[3][5][9][2] = "*****";
has[3][5][11] = 1;
ans[3][5][11][0] = "c.***";
ans[3][5][11][1] = "..***";
ans[3][5][11][2] = "*****";
has[3][5][14] = 1;
ans[3][5][14][0] = "c****";
ans[3][5][14][1] = "*****";
ans[3][5][14][2] = "*****";
has[4][1][0] = 1;
ans[4][1][0][0] = "c";
ans[4][1][0][1] = ".";
ans[4][1][0][2] = ".";
ans[4][1][0][3] = ".";
has[4][1][1] = 1;
ans[4][1][1][0] = "c";
ans[4][1][1][1] = ".";
ans[4][1][1][2] = ".";
ans[4][1][1][3] = "*";
has[4][1][2] = 1;
ans[4][1][2][0] = "c";
ans[4][1][2][1] = ".";
ans[4][1][2][2] = "*";
ans[4][1][2][3] = "*";
has[4][1][3] = 1;
ans[4][1][3][0] = "c";
ans[4][1][3][1] = "*";
ans[4][1][3][2] = "*";
ans[4][1][3][3] = "*";
has[4][2][0] = 1;
ans[4][2][0][0] = "c.";
ans[4][2][0][1] = "..";
ans[4][2][0][2] = "..";
ans[4][2][0][3] = "..";
has[4][2][2] = 1;
ans[4][2][2][0] = "c.";
ans[4][2][2][1] = "..";
ans[4][2][2][2] = "..";
ans[4][2][2][3] = "**";
has[4][2][4] = 1;
ans[4][2][4][0] = "c.";
ans[4][2][4][1] = "..";
ans[4][2][4][2] = "**";
ans[4][2][4][3] = "**";
has[4][2][7] = 1;
ans[4][2][7][0] = "c*";
ans[4][2][7][1] = "**";
ans[4][2][7][2] = "**";
ans[4][2][7][3] = "**";
has[4][3][0] = 1;
ans[4][3][0][0] = "c..";
ans[4][3][0][1] = "...";
ans[4][3][0][2] = "...";
ans[4][3][0][3] = "...";
has[4][3][1] = 1;
ans[4][3][1][0] = "c..";
ans[4][3][1][1] = "...";
ans[4][3][1][2] = "...";
ans[4][3][1][3] = "..*";
has[4][3][2] = 1;
ans[4][3][2][0] = "c..";
ans[4][3][2][1] = "...";
ans[4][3][2][2] = "..*";
ans[4][3][2][3] = "..*";
has[4][3][3] = 1;
ans[4][3][3][0] = "c..";
ans[4][3][3][1] = "...";
ans[4][3][3][2] = "...";
ans[4][3][3][3] = "***";
has[4][3][4] = 1;
ans[4][3][4][0] = "c..";
ans[4][3][4][1] = "...";
ans[4][3][4][2] = "..*";
ans[4][3][4][3] = "***";
has[4][3][6] = 1;
ans[4][3][6][0] = "c..";
ans[4][3][6][1] = "...";
ans[4][3][6][2] = "***";
ans[4][3][6][3] = "***";
has[4][3][8] = 1;
ans[4][3][8][0] = "c.*";
ans[4][3][8][1] = "..*";
ans[4][3][8][2] = "***";
ans[4][3][8][3] = "***";
has[4][3][11] = 1;
ans[4][3][11][0] = "c**";
ans[4][3][11][1] = "***";
ans[4][3][11][2] = "***";
ans[4][3][11][3] = "***";
has[4][4][0] = 1;
ans[4][4][0][0] = "c...";
ans[4][4][0][1] = "....";
ans[4][4][0][2] = "....";
ans[4][4][0][3] = "....";
has[4][4][1] = 1;
ans[4][4][1][0] = "c...";
ans[4][4][1][1] = "....";
ans[4][4][1][2] = "....";
ans[4][4][1][3] = "...*";
has[4][4][2] = 1;
ans[4][4][2][0] = "c...";
ans[4][4][2][1] = "....";
ans[4][4][2][2] = "....";
ans[4][4][2][3] = "..**";
has[4][4][3] = 1;
ans[4][4][3][0] = "c...";
ans[4][4][3][1] = "....";
ans[4][4][3][2] = "...*";
ans[4][4][3][3] = "..**";
has[4][4][4] = 1;
ans[4][4][4][0] = "c...";
ans[4][4][4][1] = "....";
ans[4][4][4][2] = "....";
ans[4][4][4][3] = "****";
has[4][4][5] = 1;
ans[4][4][5][0] = "c...";
ans[4][4][5][1] = "....";
ans[4][4][5][2] = "...*";
ans[4][4][5][3] = "****";
has[4][4][6] = 1;
ans[4][4][6][0] = "c...";
ans[4][4][6][1] = "....";
ans[4][4][6][2] = "..**";
ans[4][4][6][3] = "****";
has[4][4][7] = 1;
ans[4][4][7][0] = "c..*";
ans[4][4][7][1] = "...*";
ans[4][4][7][2] = "...*";
ans[4][4][7][3] = "****";
has[4][4][8] = 1;
ans[4][4][8][0] = "c...";
ans[4][4][8][1] = "....";
ans[4][4][8][2] = "****";
ans[4][4][8][3] = "****";
has[4][4][10] = 1;
ans[4][4][10][0] = "c..*";
ans[4][4][10][1] = "...*";
ans[4][4][10][2] = "****";
ans[4][4][10][3] = "****";
has[4][4][12] = 1;
ans[4][4][12][0] = "c.**";
ans[4][4][12][1] = "..**";
ans[4][4][12][2] = "****";
ans[4][4][12][3] = "****";
has[4][4][15] = 1;
ans[4][4][15][0] = "c***";
ans[4][4][15][1] = "****";
ans[4][4][15][2] = "****";
ans[4][4][15][3] = "****";
has[4][5][0] = 1;
ans[4][5][0][0] = "c....";
ans[4][5][0][1] = ".....";
ans[4][5][0][2] = ".....";
ans[4][5][0][3] = ".....";
has[4][5][1] = 1;
ans[4][5][1][0] = "c....";
ans[4][5][1][1] = ".....";
ans[4][5][1][2] = ".....";
ans[4][5][1][3] = "....*";
has[4][5][2] = 1;
ans[4][5][2][0] = "c....";
ans[4][5][2][1] = ".....";
ans[4][5][2][2] = ".....";
ans[4][5][2][3] = "...**";
has[4][5][3] = 1;
ans[4][5][3][0] = "c....";
ans[4][5][3][1] = ".....";
ans[4][5][3][2] = ".....";
ans[4][5][3][3] = "..***";
has[4][5][4] = 1;
ans[4][5][4][0] = "c....";
ans[4][5][4][1] = ".....";
ans[4][5][4][2] = "....*";
ans[4][5][4][3] = "..***";
has[4][5][5] = 1;
ans[4][5][5][0] = "c....";
ans[4][5][5][1] = ".....";
ans[4][5][5][2] = ".....";
ans[4][5][5][3] = "*****";
has[4][5][6] = 1;
ans[4][5][6][0] = "c....";
ans[4][5][6][1] = ".....";
ans[4][5][6][2] = "....*";
ans[4][5][6][3] = "*****";
has[4][5][7] = 1;
ans[4][5][7][0] = "c....";
ans[4][5][7][1] = ".....";
ans[4][5][7][2] = "...**";
ans[4][5][7][3] = "*****";
has[4][5][8] = 1;
ans[4][5][8][0] = "c....";
ans[4][5][8][1] = ".....";
ans[4][5][8][2] = "..***";
ans[4][5][8][3] = "*****";
has[4][5][9] = 1;
ans[4][5][9][0] = "c...*";
ans[4][5][9][1] = "....*";
ans[4][5][9][2] = "...**";
ans[4][5][9][3] = "*****";
has[4][5][10] = 1;
ans[4][5][10][0] = "c....";
ans[4][5][10][1] = ".....";
ans[4][5][10][2] = "*****";
ans[4][5][10][3] = "*****";
has[4][5][11] = 1;
ans[4][5][11][0] = "c..**";
ans[4][5][11][1] = "...**";
ans[4][5][11][2] = "...**";
ans[4][5][11][3] = "*****";
has[4][5][12] = 1;
ans[4][5][12][0] = "c...*";
ans[4][5][12][1] = "....*";
ans[4][5][12][2] = "*****";
ans[4][5][12][3] = "*****";
has[4][5][14] = 1;
ans[4][5][14][0] = "c..**";
ans[4][5][14][1] = "...**";
ans[4][5][14][2] = "*****";
ans[4][5][14][3] = "*****";
has[4][5][16] = 1;
ans[4][5][16][0] = "c.***";
ans[4][5][16][1] = "..***";
ans[4][5][16][2] = "*****";
ans[4][5][16][3] = "*****";
has[4][5][19] = 1;
ans[4][5][19][0] = "c****";
ans[4][5][19][1] = "*****";
ans[4][5][19][2] = "*****";
ans[4][5][19][3] = "*****";
has[5][1][0] = 1;
ans[5][1][0][0] = "c";
ans[5][1][0][1] = ".";
ans[5][1][0][2] = ".";
ans[5][1][0][3] = ".";
ans[5][1][0][4] = ".";
has[5][1][1] = 1;
ans[5][1][1][0] = "c";
ans[5][1][1][1] = ".";
ans[5][1][1][2] = ".";
ans[5][1][1][3] = ".";
ans[5][1][1][4] = "*";
has[5][1][2] = 1;
ans[5][1][2][0] = "c";
ans[5][1][2][1] = ".";
ans[5][1][2][2] = ".";
ans[5][1][2][3] = "*";
ans[5][1][2][4] = "*";
has[5][1][3] = 1;
ans[5][1][3][0] = "c";
ans[5][1][3][1] = ".";
ans[5][1][3][2] = "*";
ans[5][1][3][3] = "*";
ans[5][1][3][4] = "*";
has[5][1][4] = 1;
ans[5][1][4][0] = "c";
ans[5][1][4][1] = "*";
ans[5][1][4][2] = "*";
ans[5][1][4][3] = "*";
ans[5][1][4][4] = "*";
has[5][2][0] = 1;
ans[5][2][0][0] = "c.";
ans[5][2][0][1] = "..";
ans[5][2][0][2] = "..";
ans[5][2][0][3] = "..";
ans[5][2][0][4] = "..";
has[5][2][2] = 1;
ans[5][2][2][0] = "c.";
ans[5][2][2][1] = "..";
ans[5][2][2][2] = "..";
ans[5][2][2][3] = "..";
ans[5][2][2][4] = "**";
has[5][2][4] = 1;
ans[5][2][4][0] = "c.";
ans[5][2][4][1] = "..";
ans[5][2][4][2] = "..";
ans[5][2][4][3] = "**";
ans[5][2][4][4] = "**";
has[5][2][6] = 1;
ans[5][2][6][0] = "c.";
ans[5][2][6][1] = "..";
ans[5][2][6][2] = "**";
ans[5][2][6][3] = "**";
ans[5][2][6][4] = "**";
has[5][2][9] = 1;
ans[5][2][9][0] = "c*";
ans[5][2][9][1] = "**";
ans[5][2][9][2] = "**";
ans[5][2][9][3] = "**";
ans[5][2][9][4] = "**";
has[5][3][0] = 1;
ans[5][3][0][0] = "c..";
ans[5][3][0][1] = "...";
ans[5][3][0][2] = "...";
ans[5][3][0][3] = "...";
ans[5][3][0][4] = "...";
has[5][3][1] = 1;
ans[5][3][1][0] = "c..";
ans[5][3][1][1] = "...";
ans[5][3][1][2] = "...";
ans[5][3][1][3] = "...";
ans[5][3][1][4] = "..*";
has[5][3][2] = 1;
ans[5][3][2][0] = "c..";
ans[5][3][2][1] = "...";
ans[5][3][2][2] = "...";
ans[5][3][2][3] = "..*";
ans[5][3][2][4] = "..*";
has[5][3][3] = 1;
ans[5][3][3][0] = "c..";
ans[5][3][3][1] = "...";
ans[5][3][3][2] = "...";
ans[5][3][3][3] = "...";
ans[5][3][3][4] = "***";
has[5][3][4] = 1;
ans[5][3][4][0] = "c..";
ans[5][3][4][1] = "...";
ans[5][3][4][2] = "...";
ans[5][3][4][3] = "..*";
ans[5][3][4][4] = "***";
has[5][3][5] = 1;
ans[5][3][5][0] = "c..";
ans[5][3][5][1] = "...";
ans[5][3][5][2] = "..*";
ans[5][3][5][3] = "..*";
ans[5][3][5][4] = "***";
has[5][3][6] = 1;
ans[5][3][6][0] = "c..";
ans[5][3][6][1] = "...";
ans[5][3][6][2] = "...";
ans[5][3][6][3] = "***";
ans[5][3][6][4] = "***";
has[5][3][7] = 1;
ans[5][3][7][0] = "c..";
ans[5][3][7][1] = "...";
ans[5][3][7][2] = "..*";
ans[5][3][7][3] = "***";
ans[5][3][7][4] = "***";
has[5][3][9] = 1;
ans[5][3][9][0] = "c..";
ans[5][3][9][1] = "...";
ans[5][3][9][2] = "***";
ans[5][3][9][3] = "***";
ans[5][3][9][4] = "***";
has[5][3][11] = 1;
ans[5][3][11][0] = "c.*";
ans[5][3][11][1] = "..*";
ans[5][3][11][2] = "***";
ans[5][3][11][3] = "***";
ans[5][3][11][4] = "***";
has[5][3][14] = 1;
ans[5][3][14][0] = "c**";
ans[5][3][14][1] = "***";
ans[5][3][14][2] = "***";
ans[5][3][14][3] = "***";
ans[5][3][14][4] = "***";
has[5][4][0] = 1;
ans[5][4][0][0] = "c...";
ans[5][4][0][1] = "....";
ans[5][4][0][2] = "....";
ans[5][4][0][3] = "....";
ans[5][4][0][4] = "....";
has[5][4][1] = 1;
ans[5][4][1][0] = "c...";
ans[5][4][1][1] = "....";
ans[5][4][1][2] = "....";
ans[5][4][1][3] = "....";
ans[5][4][1][4] = "...*";
has[5][4][2] = 1;
ans[5][4][2][0] = "c...";
ans[5][4][2][1] = "....";
ans[5][4][2][2] = "....";
ans[5][4][2][3] = "....";
ans[5][4][2][4] = "..**";
has[5][4][3] = 1;
ans[5][4][3][0] = "c...";
ans[5][4][3][1] = "....";
ans[5][4][3][2] = "....";
ans[5][4][3][3] = "...*";
ans[5][4][3][4] = "..**";
has[5][4][4] = 1;
ans[5][4][4][0] = "c...";
ans[5][4][4][1] = "....";
ans[5][4][4][2] = "....";
ans[5][4][4][3] = "....";
ans[5][4][4][4] = "****";
has[5][4][5] = 1;
ans[5][4][5][0] = "c...";
ans[5][4][5][1] = "....";
ans[5][4][5][2] = "....";
ans[5][4][5][3] = "...*";
ans[5][4][5][4] = "****";
has[5][4][6] = 1;
ans[5][4][6][0] = "c...";
ans[5][4][6][1] = "....";
ans[5][4][6][2] = "....";
ans[5][4][6][3] = "..**";
ans[5][4][6][4] = "****";
has[5][4][7] = 1;
ans[5][4][7][0] = "c...";
ans[5][4][7][1] = "....";
ans[5][4][7][2] = "...*";
ans[5][4][7][3] = "..**";
ans[5][4][7][4] = "****";
has[5][4][8] = 1;
ans[5][4][8][0] = "c...";
ans[5][4][8][1] = "....";
ans[5][4][8][2] = "....";
ans[5][4][8][3] = "****";
ans[5][4][8][4] = "****";
has[5][4][9] = 1;
ans[5][4][9][0] = "c...";
ans[5][4][9][1] = "....";
ans[5][4][9][2] = "...*";
ans[5][4][9][3] = "****";
ans[5][4][9][4] = "****";
has[5][4][10] = 1;
ans[5][4][10][0] = "c...";
ans[5][4][10][1] = "....";
ans[5][4][10][2] = "..**";
ans[5][4][10][3] = "****";
ans[5][4][10][4] = "****";
has[5][4][11] = 1;
ans[5][4][11][0] = "c..*";
ans[5][4][11][1] = "...*";
ans[5][4][11][2] = "...*";
ans[5][4][11][3] = "****";
ans[5][4][11][4] = "****";
has[5][4][12] = 1;
ans[5][4][12][0] = "c...";
ans[5][4][12][1] = "....";
ans[5][4][12][2] = "****";
ans[5][4][12][3] = "****";
ans[5][4][12][4] = "****";
has[5][4][14] = 1;
ans[5][4][14][0] = "c..*";
ans[5][4][14][1] = "...*";
ans[5][4][14][2] = "****";
ans[5][4][14][3] = "****";
ans[5][4][14][4] = "****";
has[5][4][16] = 1;
ans[5][4][16][0] = "c.**";
ans[5][4][16][1] = "..**";
ans[5][4][16][2] = "****";
ans[5][4][16][3] = "****";
ans[5][4][16][4] = "****";
has[5][4][19] = 1;
ans[5][4][19][0] = "c***";
ans[5][4][19][1] = "****";
ans[5][4][19][2] = "****";
ans[5][4][19][3] = "****";
ans[5][4][19][4] = "****";
has[5][5][0] = 1;
ans[5][5][0][0] = "c....";
ans[5][5][0][1] = ".....";
ans[5][5][0][2] = ".....";
ans[5][5][0][3] = ".....";
ans[5][5][0][4] = ".....";
has[5][5][1] = 1;
ans[5][5][1][0] = "c....";
ans[5][5][1][1] = ".....";
ans[5][5][1][2] = ".....";
ans[5][5][1][3] = ".....";
ans[5][5][1][4] = "....*";
has[5][5][2] = 1;
ans[5][5][2][0] = "c....";
ans[5][5][2][1] = ".....";
ans[5][5][2][2] = ".....";
ans[5][5][2][3] = ".....";
ans[5][5][2][4] = "...**";
has[5][5][3] = 1;
ans[5][5][3][0] = "c....";
ans[5][5][3][1] = ".....";
ans[5][5][3][2] = ".....";
ans[5][5][3][3] = ".....";
ans[5][5][3][4] = "..***";
has[5][5][4] = 1;
ans[5][5][4][0] = "c....";
ans[5][5][4][1] = ".....";
ans[5][5][4][2] = ".....";
ans[5][5][4][3] = "....*";
ans[5][5][4][4] = "..***";
has[5][5][5] = 1;
ans[5][5][5][0] = "c....";
ans[5][5][5][1] = ".....";
ans[5][5][5][2] = ".....";
ans[5][5][5][3] = ".....";
ans[5][5][5][4] = "*****";
has[5][5][6] = 1;
ans[5][5][6][0] = "c....";
ans[5][5][6][1] = ".....";
ans[5][5][6][2] = ".....";
ans[5][5][6][3] = "....*";
ans[5][5][6][4] = "*****";
has[5][5][7] = 1;
ans[5][5][7][0] = "c....";
ans[5][5][7][1] = ".....";
ans[5][5][7][2] = ".....";
ans[5][5][7][3] = "...**";
ans[5][5][7][4] = "*****";
has[5][5][8] = 1;
ans[5][5][8][0] = "c....";
ans[5][5][8][1] = ".....";
ans[5][5][8][2] = ".....";
ans[5][5][8][3] = "..***";
ans[5][5][8][4] = "*****";
has[5][5][9] = 1;
ans[5][5][9][0] = "c....";
ans[5][5][9][1] = ".....";
ans[5][5][9][2] = "....*";
ans[5][5][9][3] = "..***";
ans[5][5][9][4] = "*****";
has[5][5][10] = 1;
ans[5][5][10][0] = "c....";
ans[5][5][10][1] = ".....";
ans[5][5][10][2] = ".....";
ans[5][5][10][3] = "*****";
ans[5][5][10][4] = "*****";
has[5][5][11] = 1;
ans[5][5][11][0] = "c....";
ans[5][5][11][1] = ".....";
ans[5][5][11][2] = "....*";
ans[5][5][11][3] = "*****";
ans[5][5][11][4] = "*****";
has[5][5][12] = 1;
ans[5][5][12][0] = "c....";
ans[5][5][12][1] = ".....";
ans[5][5][12][2] = "...**";
ans[5][5][12][3] = "*****";
ans[5][5][12][4] = "*****";
has[5][5][13] = 1;
ans[5][5][13][0] = "c....";
ans[5][5][13][1] = ".....";
ans[5][5][13][2] = "..***";
ans[5][5][13][3] = "*****";
ans[5][5][13][4] = "*****";
has[5][5][14] = 1;
ans[5][5][14][0] = "c...*";
ans[5][5][14][1] = "....*";
ans[5][5][14][2] = "...**";
ans[5][5][14][3] = "*****";
ans[5][5][14][4] = "*****";
has[5][5][15] = 1;
ans[5][5][15][0] = "c....";
ans[5][5][15][1] = ".....";
ans[5][5][15][2] = "*****";
ans[5][5][15][3] = "*****";
ans[5][5][15][4] = "*****";
has[5][5][16] = 1;
ans[5][5][16][0] = "c..**";
ans[5][5][16][1] = "...**";
ans[5][5][16][2] = "...**";
ans[5][5][16][3] = "*****";
ans[5][5][16][4] = "*****";
has[5][5][17] = 1;
ans[5][5][17][0] = "c...*";
ans[5][5][17][1] = "....*";
ans[5][5][17][2] = "*****";
ans[5][5][17][3] = "*****";
ans[5][5][17][4] = "*****";
has[5][5][19] = 1;
ans[5][5][19][0] = "c..**";
ans[5][5][19][1] = "...**";
ans[5][5][19][2] = "*****";
ans[5][5][19][3] = "*****";
ans[5][5][19][4] = "*****";
has[5][5][21] = 1;
ans[5][5][21][0] = "c.***";
ans[5][5][21][1] = "..***";
ans[5][5][21][2] = "*****";
ans[5][5][21][3] = "*****";
ans[5][5][21][4] = "*****";
has[5][5][24] = 1;
ans[5][5][24][0] = "c****";
ans[5][5][24][1] = "*****";
ans[5][5][24][2] = "*****";
ans[5][5][24][3] = "*****";
ans[5][5][24][4] = "*****";


}

int main()
{
    freopen("C-small-attempt1.in","r",stdin);
    freopen("out1.txt","w",stdout);
    
	//make();
	make2();
	
    int T;
	cin >> T;
	for(int t=0;t<T;t++){
		cin >> R >> C >> M;
		if(has[R][C][M]==1){
			printf("Case #%d:\n",t+1);
			for(int i=0;i<R;i++)
				cout << ans[R][C][M][i] << endl;
		}else{
			printf("Case #%d:\nImpossible\n",t+1);
		}
	}
    
    return 0;
}