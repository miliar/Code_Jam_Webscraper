#include<iostream>#include<algorithm>#include<cstdio>#include<vector>#include<cstring>#include<string>#include<cstdlib>#include<math.h>#include<cctype>#include<iomanip>#include<map>#include<set>#include<stack>#include<queue>#include<cassert>#include<sstream> using namespace std; #define L long#define LL unsigned long long#define ULL unsigned long long//#define D double #define LD long double//#define G getchar#define MOD 1000000007#define f first#define s second#define pb push_back#define mp make_pair#define ULL unsigned long long#define pll pair <L,L>#define INF ((1<<30)+(1<<29))   LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}LL lcm(LL a,LL b){return a*b/gcd(a,b);}LL modpow(LL n ,LL k,LL mod){LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans%mod;}LL max(LL a,LL b){return (a>b)?a:b;}LL min(LL a,LL b){return (a<b)?a:b;}LL ab(LL a){return (a>0)?a:-a;}LL poww(LL n,LL k){LL ans=1;while(k>0){if(k&1)ans*=n;k>>=1;n*=n;}return ans;}  L max(L a,L b){return (a>b)?a:b;}L min(L a,L b){return (a<b)?a:b;}L ab(L a){return (a>0)?a:-a;}LL count(LL n){ LL ans=0; while(n) {  if(n&1)ans++;  n>>=1; } return ans;}LL A[20][20]={};int main(){ ios::sync_with_stdio(false); LL T,ans,tt=0,i,j,n,R,C,r,c,x; cin>>T; while(T--) {tt++;  ans=INF;  cin>>R>>C>>n;  for(i=0;i<=R+1;i++)   for(j=0;j<=C+1;j++)    A[i][j]=0;  for(i=0;i<(1<<(R*C));i++)  {   if(count(i)==n)   {    j=i;r=c=1;	while(j)	{	 if(j&1)	 {	  A[r][c]=1;	 }	 else	 {	  A[r][c]=0;	 }	 c++;	 if(c==C+1)	  c=1,r++;	 j>>=1;	}x=0;	for(r=1;r<=R;r++)	 for(c=1;c<=C;c++)	 if(A[r][c])	 {	  x+=A[r][c+1];	  x+=A[r+1][c];	 }	ans=min(ans,x);	//cout<<x<<" "<<ans<<" "<<i<<endl;   }  }  cout<<"Case #"<<tt<<": "<<ans<<endl; } return 0;}