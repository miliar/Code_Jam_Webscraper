#include <algorithm>
#include <iomanip>
#include <istream>
#include <map>
#include <ostream>
#include <set>
#include <sstream>
#include <utility>
#include <vector>
using namespace std;
// Solution template generated by caide


class Solution {
public:
    void solve(std::istream& in, std::ostream& out) {
        int T;
        in >> T;
        for (int test = 1; test <= T; ++test) {
            int mx;
            string s;
            in >> mx >> s;
            int res = 0, cur = 0;
            for (int i = 0; i < (int)s.size(); ++i) {
                if (cur < i) {
                    res += i - cur;
                    cur = i;
                }
                cur += s[i] - '0';
            }
            out << "Case #" << test << ": " << res << endl;
        }
    }
};

void solve(std::istream& in, std::ostream& out)
{
    out << std::setprecision(12);
    Solution solution;
    solution.solve(in, out);
}
#include <fstream>
#include <iostream>

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    istream& in = cin;

    ostream& out = cout;
    solve(in, out);
    return 0;
}
