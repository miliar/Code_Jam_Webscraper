#include <bits/stdc++.h>
using namespace std;
int main()
{
/*
	С одной стороны - смайлик
	С другой стороны - ничего
	Нам дали переворачиватель блинов, который переворачивает K последовательно расположенных блинов
	в этом диапазоне из K блинчиков он меняет каждый смайлик-ориентированный блин на чистый и наоборот
	порядок как был слева-направо, так и остается
	нельзя перевернуть меньше чем K блинчиков
	
	По данному состоянию, вычислить минимальное количество использований переворачивателя, чтобы повернуть всех смайликом вверх или показать, что это невозможно.
	
	The first line of the input gives the number of test cases, T. T test cases follow. Each consists of one line with a string S and an integer K. S represents the row of pancakes: each of its characters is either + (which represents a pancake that is initially happy side up) or - (which represents a pancake that is initially blank side up). 
	Первая строка: число кейсов T
	Затем T строк кейсов
	Каждый состоит из строки S и числа K
	+ - смайликом вверх
	- - чистой стороной
	

	---+-++- 3
	---: один раз -> ++++-++-
	++++: ноль (1)
	++++-: ноль (1)
	++++-+: ноль (1)
	++++-++: можно -> +++++-- (2)
	+++++---: можно -> +++++++ (3) 
	+++++ 4
	++++: 0
	+++++: 0
	итого 0
	-+-+- 4
	-+-+: нельзя
	-+-+-: нельзя
	
	Еще раз.
	---+--++-
	Первый символ делаем плюсом -> ++++--++-
	Второй символ уже стал плюсом
	Третий символ тоже стал плюсом
	Четвертый - плюс
	Пятый - минус, можем перевернуть два следующих: ++++++---
	Шестой - плюс
	Седьмой - минус, можем перевернуть вместе с двумя следующими: +++++++++
	Остальные - плюсы.
	
	По такой же логике рассуждаем в третьем примере:
	
	-+-+- 4
	Превращаем первый минус в плюс, получаем: +-+--
	Второй: ++-++
	А третий минус мы изменить не можем, потому что длина переворачивателя больше.
	Лемма: мы можем перевернуть блинчик Ai в том случае, если i+k < N.
*/
	string s;
	int k;
	int t;
	cin >> t;
	bool impossible;
	int flips;
	for(int j = 1; j <= t; j++)
	{
		cin >> s >> k;
		impossible = false;
		flips = 0;
		for(int i = 0; i < s.length(); i++)
		{
			if(s[i] == '+')
				continue;			//Нам не нужно ничего делать с этим блинчиком
			//Можем ли мы его перевернуть?
			if(i+k <= s.length())
			{
				//Да, переворачиваем
				flips++;
				for(int i1 = i; i1 < i+k; i1++)
				{
					if(s[i1] == '-')
						s[i1] = '+';
					else
						s[i1] = '-';
				}
			}
			else
				impossible = true;
		}
		cout << "Case #" << j << ": ";
		if(impossible)
			cout << "IMPOSSIBLE" << endl;
		else
			cout << flips << endl;
	}
	return 0;
}