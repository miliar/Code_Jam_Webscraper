#include<iostream>
#include<fstream>
#include<string>

using namespace std;

ifstream Inputfile;
ofstream Outputfile;

#define cin Inputfile
#define cout Outputfile

#define FILENAME "A-large"
#define FILENAME_IN FILENAME ".in"
#define FILENAME_OUT FILENAME ".out"

#define forab(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)
#define forba(i, a, b) for (int i = (int)(b); i >= (int)(a); --i)
#define for0n(i, n) forab (i, 0, n-1)
#define for1n(i, n) forab (i, 1, n)
#define forn0(i, n) forba (i, n-1, 0)
#define forn1(i, n) forba (i, n, 1)

int main() {
    Inputfile.open(FILENAME_IN);
    Outputfile.open(FILENAME_OUT);
    int T;
    cin >> T;

    char ipTChar[] = "12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901";
    string ipT = "12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901";
    int opT = 0;
    int K;
    bool flag = false;
    int index = string::npos;

    for1n (i, T) {
        cin >> ipTChar >> K;
        ipT = ipTChar;
        cout << "Case #" << i << ": ";

        opT = 0;
        flag = true;
        while ((index = ipT.find("-")) != string::npos) {
            if (index + K <= ipT.length()) {
                ++opT;
                forab (j, index, (index + (K - 1))) {
                    if (ipT[j] == '+') {
                        ipT[j] = '-';
                    } else {
                        ipT[j] = '+';
                    }
                }
            } else {
                flag = false;
                break;
            }
        }
        if (flag) {
            cout << opT << endl;
        } else {
            cout << "IMPOSSIBLE" << endl;
        }
    }

    return 0;
}
