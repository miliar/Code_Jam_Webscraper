/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Yulian
 */



#include <iostream>

#include <fstream>
#include <vector>
#include <set>
#include <cmath>
#include <queue>
#include <deque>
#include <string>
#include <algorithm>
#include <map>
#include <numeric>
#include <limits>




#include <ostream>
#include <sstream>


using namespace std;
class A {
public:
	void solve(std::istream& in, std::ostream& out) {
    ios::sync_with_stdio(false);
		int T, res, k;
    string s;
    vector<bool> a;
    in >> T;
    for(int t = 1; t <= T; ++t){
      in >> s >> k;
      res = 0;
      a = vector<bool> (s.size());
      for(int i = 0; i < s.size(); ++i){
        a[i] = s[i] == '+';
      }
      for(int i = 0; i < s.size() && res != -1; ++i){
        if(!a[i]) {
          if (s.size() - i < k) {
            // impossible
            res = -1;
          } else {
            ++res;
            for (int j = 0; j < k; ++j) {
              a[i + j].flip();
            }
          }
        }
      }
      out << "Case #" << t << ": ";
      if(res != -1){
        out << res;
      }else{
        out << "IMPOSSIBLE";
      }
      out << '\n';
    }
	}
};


int main() {
	A solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
