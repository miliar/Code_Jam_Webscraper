/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Evgenii Balai
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include<string>
#include<algorithm>

using namespace std;

class TaskA {
public:

    pair<string, string> reduce(string s, char maxL) {
        string result = "";
        string prefix = "";
        //  cout << s<< " " << maxL<<" +"<<endl;
        for (char c:s) {
            if (c == maxL) {
                prefix.push_back(maxL);
            }
            else {
                result.push_back(c);
            }
        }
        return {prefix, result};
    }


    string solve(string s) {
        //cout <<"str"<<s<<endl;
        if (s.length() <= 1)
            return s;
        char maxL = 'A';
        for (int i = 0; i < s.length(); i++) {
            maxL = max(maxL, s[i]);
        }
        int idx = -1;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == maxL) {
                idx = i;
                break;
            }
        }
        //cout <<"stri "<<idx<<endl;
        pair<string, string> red = reduce(s.substr(idx), maxL);
        return red.first + solve(s.substr(0, idx)) + red.second;
        //return reduce(s.substr(idx),maxL) + solve(s.substr(0,idx));
    }

    void solve(std::istream &in, std::ostream &out) {

        int t = 0;
        in >> t;
        //cout <<"LOL"<<endl;
        for (int tcase = 0; tcase < t; tcase++) {
            string s;
            in >> s;
            //cout << s << "--" <<endl;
            out << "Case #" << tcase + 1 << ": " << solve(s) << endl;
        }

    }
};


int main() {
    TaskA solver;
    std::istream &in(std::cin);
    std::ofstream out("a.out");
    solver.solve(in, out);
    return 0;
}

